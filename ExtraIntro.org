
* WRITE Extra Intro Stuff
/Thus we arrive at a paradox: any mediating technology is obliged to erase itself to the highest degree possible in the name of unfettered communication, but in doing so it proves its own virtuosic presence as technology, thereby undoing the original erasure./

  The actual experience of the internet involves many states of being, which are constituted of digital and non-digital experiences, that have little connectionto the simplistic binary of online and offline.[fn:74]

The phenomenology of a hyper-streamed-sound thus bear the followng characterstics:
- memory as it is experienced in the moement
- layered experience, spatially non-diagetic
- experiments with interface, multilayed
- a focus on the sensation of memory in a variety of forms, as false, shared, non-linear and spatial.

Heidegger notes in /Being and Time/ that the priveleging of the present has a *parasitic* relationship with the concept of time. This could be extended.

Correlationist principle. Real can be communicated. Laurelle.[fn:1]

Site vs Non-Site [fn:2]

on a personal level one piece of anecdotal evidence that i have noticed is the large number of programmers and ict (informatin communicatons technolgy) workers that are musicians, composers or disc.

The other piece of anecdotal evidence is the predisposition for composers toward computer programming and electronics.

    the conceptual inspiration for these works is drawn from histories of early computing, the philosophical influence of early digital design, and cybernetic thought [fn:3], as well as philosophical works about technology and communication. [fn:4] specific models and references for the works are outlined later in their descriptions and documentation. in general, it is the history of cultural metaphors about computation, as well as studies of  technological opportunities that never materialised or fell to the wayside, that have helped me to explore other possibilities for social interaction in computing.[fn:5] by exploring these topics we can see interesting possibilities for restructuring networked engagements with machines. i wish to argue, as has been shown by eden medina in her study of some of the rudimentary techniques explored by the cyberneticians of the cybersyn project in allende's chile, that it is not real time communication of high tech computing that determines the sense of a 'networked experience', rather it is the idea of bi-directional streams of information that are being responded to. this idea is central in much of cybernetic organisational theory, and informs a wide range of practices today. one which i use extensively is the 'streams' programming technique, one that is prevalent in an extensive number of web programs at the moments.[fn:6]

A sincere attempt to portray some of the radical possibilities of computer art when it embraces its lineage and explores the anxieties of the present. These three areas: the philosophies of how machinic interactions have coalesced into one commonly accepted into a common form, a look at unexplored possibilities and under-emphasised potentials in the present, and a search for how to revive those alternative futures, each represent the three strands of artistic research in the project. It is a consideration of what happens when we begin to employ a kind of empathy toward a machinic perspective.

Software as a /super-medium/ that unifies other forms,  (tv/film/radio/print), rather than containing them it reforms and reshapes them into a "new unitary form"[fn:7] "this super-medium acts as both a meditating and structuring frame that we must understand through its instantiation under particular physical constraints" - rejecting the immateriality of software. analysing the doing, platform studies.

the terms 'softwarized society' coined by David berry [fn:8] encapsulates what I see as the outcome of networked experience and computational aesthetics.

As technology inculcates itself we are in danger of forgetting how entangled with computer code we really are, software is part of the narrative of our lives, and yet often overlooked. fuller (2006) notes, "in a sense, all intellectual work is now 'software study', in that the software provides its media and its context..." Berry encourages us to think about the "structure of feeling[fn:9]"  and methods of usefulness permitted by code. noting that technology is a cultural metaphor as well as lexical and physical object. these varied cultural thoughts about technology in relation to the self and society inform practice and engagement with tools as well as wider social and economic relations. to the extent that berry believes the metaphors of software in particular, to form a 'plane of immanence' that shapes relations[fn:10].

in my attempt to consider the design and implementation of tools like computer vision, real-time communication and data-collection, i have often found that the design and user experience as a developer is often imprinted with the culture and expectations of the teams that assembled the foundations of these tools[fn:11]. in a sense i have discovered  a source for my own anxiety in a consciousness of the kind of corporate cultures values embedded in the design of systems. my response to this has been to try and configure atypical user interfaces and methods of engagement, such as avoiding the user metaphor of a person sitting at a computer terminal with keyboard and mouse, and trying to treat sound as a first-class user interaction medium[fn:12].

in this sense the work is inspired by concepts such as 'sousveillance'[fn:13] where a technology is levelled against an oppressor rather than the opposite. in my course of exploring how to 'turn the tables' however, i have also found that it is often the composition of technologies and the relationships that their design encourages[fn:14], that require the formulation of organic and locally specific technologies that offer solutions more relevant in my case for an artistically inspired, more affecting outcome, and on a general level benefit participants.

however the process by which i developed this project was not from a carefully chosen theme, but rather a methodology where i have sought to describe some of the 'back boxes' of communications that i interact with on a daily basis.

  Hypermedia and the multiplicity of thought.

  Sound begets more sound, writing begets more writing, editing is a productive process as works are split and multiply. Previously in text and sound work as insight are found that are perhaps not relevant to the issue at hand and either discarded or split into new works, hyper- linking allows for these connections and pathways to remain rendered. For a multiplicity of thought.

In a general sense, the work follows an interest and critique of the compuational theory of mind. The word computer itself once simply meant a person who does calculations, a somewhat disparaging term. They later became teams, usually of women that would prepare programs, maintain machines and input code on punch cards.

  Streams and Burroughs

Definitions of the parasite, according to Michel Serres:
1. To one side of (para) the location of the event (site) – the­ medium or being through which communication must pass.
2. The ‘static’ that interrupts the transmission of a message.
3. The uninvited guest or ‘social’ parasite.
4. A living organism that takes without giving as it infects its hosts
5. The one who is always near to food, close to the meat
6. A thermal exciter, that which catalyses the system to a new equilibrium state

/‘Noise calls for decipherment; it makes a reading of the message more difficult. And yet without it, there would be no message. There is, in short, no message without resistance’./

 /“The interface … consists essentially of an area of choice. It both separates and mixes the two worlds that meet together there, that run into it. It becomes a fertile nexus./ [fn:1]

/Ideology gets 'modeled' in software. So in the very perfection of the ideological regime, in the form of its pure digital simulation, comes the death of the ideological regime, and simulation is 'crowned winner' as the absolute horizon of the ideological world./

/Thus we arrive at a paradox: any mediating technology is obliged to erase iself to the highest degree possible in the name of unfettered communication, but in doing so it proves its own virtuosic presence as technology, thereby undoing the original erasure./

   Interfaces all the way down. Containter for previous format.

  What is software, Chun writes, if not the very effort of making something explicit, or making something intangible visible, while at the same time rendering the visible (such as the machine) invisible?[fn:2]

  Computers can become a tool to track and test behaviors and values that we do not always take notice of.[fn:66] They can also draw novel, arbitrary relations and be highly speculative in their reasoning, which is both exciting and troubling, as results can be incorrect or even prejudiced.[fn:7]

This suggests three general reasons why a person will turn to software:

    To learn.
    To create.
    To communicate.

    Tension between three types of use. In creation mode a model is manipulated. In communication mod ethat model is shared.
    The user becomes a group.[fn:70]

Most software is for learning, not manipulation. Getting updates on information
Interaction vs context sensitivity.

The radical change was de-coupling groups in space and time. To get a conversation going around a conference table or campfire, you need to gather everyone in the same place at the same moment. By undoing those restrictions, the internet has ushered in a host of new social patterns, from the mailing list to the chat room to the weblog.[fn:71]

A model is...

Lev Manovich Dataabase and New Media[fn:81]
* Footnotes

[fn:1] Galloway, 10 Theses on the digital

[fn:2] LEAVol19No1-McGarrigle.pdf

[fn:3] link to weiner

[fn:4] link de landa, berry.

[fn:5] idea taken from the talk,"the web that wasn't" )[[webthatwasnt][twtw]]

[fn:6] link to deetails on javascript streams

[fn:7] berry 10

[fn:8] softwareised society, link opening of phil of software on dependance on software for survival. berry p.

[fn:9] berry, p. 6.

[fn:10] berry and deleuze, p. 18.

[fn:11] link to classic essay about design of saftware informed

[fn:12] any links to this? there was a bit from deland

[fn:13] sousveilance

[fn:14] foucoult link, design of software and oppression

[fn:34] edina 64

[fn:52] www.dmytri.info/hackers-cant-solve-surveillance/

[fn:67] DEFINITION NOT FOUND: fn:4

[fn:74] http://ak.vbroek.org/2014/02/

* Footnotes

[fn:1] François Dagognet, Faces, Surfaces, Interfaces (Paris: Librairie Philosophique J. Vrin, 1982), 49

[fn:2] Wendy Hui Kyong Chun, On Software, or the Persistence of Visual Knowledge, Grey Room 18 (Winter 2004): 26– 51, 44

[fn:3] Wikipedia social computing https://en.wikipedia.org/wiki/Social_computing

[fn:4] From "Social Computing", introduction to Social Computing special edition of the Communications of the ACM, edited by Douglas Schuler, Volume 37 , Issue 1 (January 1994), Pages: 28 - 108

[fn:5]

[fn:6] From "Social Computing", introduction to Social Computing special edition of the Communications of the ACM, edited by Douglas Schuler, Volume 37 , Issue 1 (January 1994), Pages: 28 - 108

[fn:7] http://www.slate.com/articles/technology/bitwise/2015/01/black_box_society_by_frank_pasquale_a_chilling_vision_of_how_big_data_has.html

[fn:8] Paper on organisation structure effecting software design

[fn:9] Theories of the Digital

[fn:10] Put refs for all tehse people here

[fn:11] 'Critical Theory and the Digital'

[fn:12] Heidegger notes in /Being and Time/ that the priveleging of the present has a *parasitic* relationship with the concept of time. This could be extended.

[fn:13] heidegger qct

[fn:14] Waddington 577
Heidegger also noted that "it is possible to focus on the thinking behind the technology to such an extent that meaningful distinctions in the world are obscured."[fn:15] This remark was originally a part of ‘The Question Concerning Technology’, but later excised.[fn:16]

[fn:15] Waddington 577

[fn:16] (Harries, 1994, p. 233) IN Waddinton 577

[fn:17] Enframing Heidegger p.2

[fn:18] Second ceoncealment Heidgger

[fn:19] Berry on 'super-mediums'

[fn:20] Ref to Application layer of TCP/IP

[fn:21] /E-mail emerged in 1971 when users began experimenting with ways of sending electronic messages from one networked computer to another. in her study of the internet's origins, Janet Abbate writes that e-mail "remade" the arpanet system and caused it to be see 'not as a computer system but rather as a communication sytem/ (ref.82) 1.[fn:64]

[fn:22] Nelson Dream Machines

[fn:23] One of first widely noted hypermedia examples was an interactive video application for path finding through the city of Aspen, with video displaying a multi detailed map of Aspen mixed into the skyline, the application very similar to the later google maps.

[fn:24] See Derrida Text v speech.

[fn:25] Web Audio API

[fn:26] Computer Lib

[fn:27] Development of streaming

[fn:28] http://www.hpl.hp.com/techreports/2002/HPL-2002-260.pdf

[fn:29] See the deisgn of TCP/IP, also md5 sums

[fn:30] Streams Programming Languages

[fn:31] See streaming in js, matz pipe language

[fn:32] ref to dependdence on human actors in cybersyn

[fn:33] Cybernetic Revolutionaries

[fn:34] Twitter Sort

[fn:35] Soylent web site

[fn:36] Mechanical Turk

[fn:37] Link california ideology works

[fn:38] /The visions of a free, uncensorable cyberspace envisioned by Barlow, Gilmore and others was incompatible with the needs of Capital, and thus the libertarian impulses that drives Silicon valley caused a change in tune. Cyberspace was no longer a new world, declared independent with its own unalienable rights, it was now an untamed frontier, a wild-west where spooks and cypherpunks do battle and your worth is measured by your crypto slinging skills and operational security... This, as Seda Gurses argues, leads to Responsibilization... Users themselves are responsible for their privacy and safety online. No more unalienable rights, no more censorship resistant mass networks, no more expressing beliefs without fear of being silenced. Hack or be hacked./[fn:65]

[fn:39] repetition of design patterns

[fn:40] (digression on culture)

[fn:41] Pattern Aesthetics

[fn:42] the new Aesthetics

[fn:43] Chip tunes and pixel art

[fn:44] Is the museum a battle field

[fn:45] link between abductive reasoning and ai.

[fn:46] link to uses of term

[fn:47] link to new aesthetic site / files

[fn:48] From Berry:
Template Matching: This is where a computational device uses a set of images (or templates) against which it can compare a data set, which might be an image for example (for examples of an image set, see Cole et al. 2004). Template Matching (Jahangir 2008)

Prototype Matching: This form of patten matching uses a set of prototypes, which are understood as an average characteristic of a particular object or form. The key is that there does not need to be a perfect match merely a high probability of likelihood that the object and prototype are similar (for an example, see Antonina et al. 2003).

Feature Analysis: In this approach a variety of approaches are combined including detection, pattern dissection, feature comparison, and recognition. Essentially the source data is broken into key features or patterns to be compared with a library of partial objects to be matched with (for examples, see Morgan n.d.).

Recognition by Components: In this approach objects are understood to be made up of what are called 'geons' or geometric primitives. A sample of data or images is then processed through feature detectors which are programmed to look for curves, edges, etc. or through a geo detector which looks for simple 2D or 3D forms such as cylinders, bricks, wedges, cones, circles, and rectangles (see Biederman 1987).

Fourier Analysis: This form of pattern matching uses algorithms to decompose something into smaller pieces which can then be selectively analysed. This decomposition process itself is called the Fourier transform.  For example, an image might be broken down into a set of twenty squares across the image field, each of which being smaller, is made faster to process. As Moler (2004) argues, 'we all use Fourier analysis every day without even knowing it. Cell phones, disc drives, DVDs, and JPEGs all involve fast finite Fourier transforms'. Fourier transformation is also used to generate a compact representation of a signal. For example, JPEG compression uses a variant of the Fourier transformation (discrete cosine transform) of small square pieces of the digital image.

The Fourier components of each square are then rounded to lower arithmetic precision, and weak components are discarded, so that the remaining components can be stored in much less computer memory or storage space. To reconstruct the image, each image square is reassembled from the preserved approximate Fourier-transformed components, which are then inverse-transformed to produce an approximation of the original image, this is why the image can produce 'blocky' or the distinctive digital artefacts in the rendered image, see JPEG (2012).

Bottom-up and Top-down Processing: Finally, in the Bottom-up and Top-down methods an interpretation emerges from the data, this is called data-driven or bottom-up processing. Here the interpretation of a data set to be determined mostly by information collected, not by your prior models or structures being fitted to the data, hence this approach looks for repeated patterns that emerge from the data. The idea is that starting with no knowledge the software is able to learn to draw generalisations from particular examples. Alternatively an approach where prior knowledge or structures are applied data is fitted into these models to see if there is a 'fit'. This approach is sometimes called schema-driven or top-down processing. A schema is a pattern formed earlier in a data set or drawn from previous information (Dewey 2011).

[fn:49] WebPage addr.

[fn:50] Cage Imaginary Landscpe No. 5

[fn:51] Dark souls

[fn:52] Movie Big

[fn:53] Lethal Weapon

[fn:54] WebSocket protocol.

[fn:55] Xenakis Formalised Music

[fn:56] SARndbox

[fn:57] Kreylos Home SARndbox

[fn:58] Iannix Github

[fn:59] Iannix

[fn:60] Iannix manual

[fn:61] GENDY link

[fn:62] CosmosF

[fn:63] Firefader

[fn:64] edina 64

[fn:65] www.dmytri.info/hackers-cant-solve-surveillance/

[fn:67] DEFINITION NOT FOUND: fn:4

[fn:66]  Computers can become a tool to track and test behaviors and values that we do not always take notice of.

[fn:68] Comp Theory of Mind

[fn:69] Vocaloid

[fn:70] http://worrydream.com/MagicInk/#manipulation_software_design_is_hard

[fn:71] http://shirky.com/writings/group_politics.html

[fn:72] Research on socal interfaces

[fn:73] http://worrydream.com/MagicInk/#manipulation_software_design_is_hard
