#+TODO: WRITE EDIT REVIEW | DONE DELETE

* Parasite Suite - Computational Ecologies exploring social-computing and art.

* WRITE Abstract

the following works are a study in the relationship and possibilities in the spaces between communication technology and artistic practice. communications technology and musical practice hold much in the way of a common history, converging and
on a personal level one piece of anecdotal evidence that i have noticed is the large number of programmers and ict (informatin communicatons technolgy) workers that are musicians, composers or disc.

The other piece of anecdotal evidence is the predisposition for composers toward computer programming and electronics.
* EDIT Introduction
** REVIEW Quotes

Nothing that Hackers can do on their own can eliminate surveillance. Just as universal healthcare is only something that can be achieved by social means, privacy respecting mass communications platforms can only be achieved by social means.[fn:58]

The digital computer “is endowed with the capacity for synthesis, connection and communication, interfacing and exchange, all of which are inherently philosophical or world-bound,” writes Laruelle, explicitly linking computers and philosophy.[fn:57]

"e-mail emerged in 1971 when users began experimenting with ways of sending electronic messages from one networked computer to another. in her study of the internet's origins, janet abbate writes that e-mail "remade" the arpanet system and caused it to be see 'not as a computer system but rather as a communication sytem.'(ref.82) 1.[fn:1]

/this frantic disorientation uderneath the surface is therefor insulated from the user, who is provided with an interactional surface that can be familiar, skeudomorphic, representational, metonymic, flat, figurative or extremely simplistic and domestic./

 For Adorno, reification 'is as much about /forgeting/ certain histories as it is aboit exploitation and preojection' (Schecter 2007: 100).

 These articles are valuable; it is important both to observe how particular technologies function in the world and to point out possible new directions for these technologies. However, a significant dimension of technology goes unnoticed by most commentators: the way of thinking that lies behind the creation and use of technology. If more commentators on technology were able to wade through ‘The Question Concerning Technology’, as well as some of Heidegger’s other writings, they might discover some exciting new pathways for their thinking. [fn:2]

The great breakthrough of ‘The Question Concerning Technology’ is that it shifts the focus away from specific technologies and toward the modes of thinking that lie behind these technologies. However, within this breakthrough lies a danger: it is possible to focus on the thinking behind the technology to such an extent that meaningful distinctions in the world are obscured. In a remark that was originally a part of ‘The Question Concerning Technology’, but was later excised (Harries, 1994, p. 233), this danger manifests itself:

   We know very little about the ways in which software is socially created, the nature of software itself; how discourse, practices, and knowledge get translated into algorithms and code; the geographies and political economy of software development; how software is embedded into various social systems; how software applications work with each other to create complex assemblages that work within and across scales; the power wielded through software's "secondary agency"; and how software alternativly modulates the production production of space and transforms the nature of governance.[fn:3]

   There is evidence that people naturally respond to computers as if they were people. When they work well, we think of them as teammates, and when they are obstinate or rude, we respond to them the same way we respond to rude, obstinate people (Reeves and Nass, The Media Equation: How People Treat Computers, Television, and New Media Like Real People and Places). [fn:4]

   /According to Heidegger, technology is distinct from what we do with tools, instruments, equipment, or the way of thinking about those things. Likewise, modern technology is not reducible to technological artifacts, devices, or the techniques that produce those things... modern technology in essence is Heidegger’s designation for the way in which things give themselves in and through an epoch. Technology, or what also can be referred to as “technicity,” concerns itself with the ontological way in which things reveal themselves via a “sending”/

/We don’t know what these bits represent, they could be an integer, a float, they could be noted in little endian, big endian, they could be some letter in some encoding, they could be a pixel RGB, RGBA, grayscale, whatever. They could be an audio sample, signed or unsigned. They could be a processor instruction that actually tells the CPU to do something. And these roles can be assigned arbitrarily. Each data point needs additional data about itself, stored somewhere else, describing what is supposed to happen with this data. Then, depending on how the machine operates on these bits, they move towards different meanings. This is why I think it is productive to say: Everything inside the computer is a performance./ [fn:5]
** WRITE Extra Intro Stuff
    the conceptual inspiration for these works is drawn from histories of early computing, the philosophical influence of early digital design, and cybernetic thought [fn:33], as well as philosophical works about technology and communication. [fn:34] specific models and refereences for the works are outlined later in their descriptions and documentation. in general, it is the history of cultural metaphors about computation, as well as studies of  technological opportunities that never materialised or fell to the wayside, that have helped me to explore other possibilieties for social interaction in computing.[fn:35] by exploring these topics we can see interesting possibilities for restructuring networked engagements with machines. i wish to argue, as has been shown by eden medina in her study of some of the rudimentary techniques explored by the cyberneticians of the cybersyn project in allende's chile, that it is not realtime communication of high tech computing that determines the sense of a 'networked experience', rather it is the idea of bi-directional streams of information that are being responded to. this idea is central in much of cybernetic organisational theory, and informs a wide range of practices today. one which i use extensively is the 'streams' programming technique, one that is prevalent in an extensive number of web programs at the moments.[fn:36]

A sincere attempt to portray some of the radical possibilities of computer art when it embraces its lineage and explores the anxieties of the present. These three areas: the philosophies of how machinic interactions have coalesced into one commonly accepted into a common form, a look at unexplored possibilities and under-emphasised potentials in the present, and a search for how to revive those alternative futures, each represent the three strands of artistic research in the project. It is a consideration of what happens when we begin to employ a kind of empathy toward a machinic perspective.

Software as a /super-medium/ that unifies other forms,  (tv/film/radio/print), rather than containing them it reforms and reshapes them into a "new unitary form"[fn:39] "this super-medium acts as both a mediatingn and structuring frame that we must understand through its instantiation under particular physical constraints" - rejecting the immateriality of software. analysisng the doing, platform studies.

the terms 'softwarized society' coined by david berry [fn:40] encapsulates what I see as the outcome of networked experience and computational aesthetics.

As technology inculcates itself we are indanger of forgetting how entangled with computer code we really are, software is part of the narrative of our lives, and yet often overlooked. fuller (2006) notes, "in a sense, all intellecual work is now 'software study', in that the software provides its media and its context..." Berry encourages us to think about the "structure of feeling[fn:41]"  and methods of usefulness permitted by code. noting that technology is a cultural metaphor as well as lexical and physical object. these varied cultural thoughts about technology in relation to the self and society inform practice and engagement with tools as well as wider social and economic relations. to the extent that berry believes the metaphors of software in particular, to form a 'plane of immanance' that shapes relations[fn:42].

in my attempt to consider the design and implementation of tools like computer vision, real-time communication and data-colleciton, i have often found that the design and user experience as a developer is often imprinted with the culture and expectations of the teams that assembled the foundations of these tools[fn:49]. in a sense i have discovered  a source for my own anxiety in a consciousness of the kind of corporate cultures values embedded in the design of systems. my response to this has been to try and configure atypical user interfaces and methods of engagement, such as avoiding teh user metaphor of a person sitting at a computer terminal with keyboard and mouse, and trying to treat sound as a first-class user interaction medium[fn:50].

in this sense the work is inspired by coucpets such as 'sousveillance'[fn:51] where a technology is leveled against an oppressor rather than the opposite. in my course of exploring how to 'turn the tables' however, i have also found that it is often the composition of technologies and the relationships that their design encourages[fn:52], that require the formulation of organic and locally specific technologies that offer solutions more relevant in my case for an artistically inpired, more affecting outcome, and on a general level benefit participants.

however the process by which i developed this project was not from a carefully chosen theme, but rather a methodoology where i have sought to describe some of the 'back boxes' of communications that i interact with on a daily basis.

** REVIEW Introduction

  'Parasite Suite' is a collection of works exploring possibilities for social computing as artistic medium. Social computing is a concept describing the collaborative aspects of networked behaviour, a developing topic of study in economics, computer science and information systems.[fn:6] It describes scenarios where computed information is created, distributed and extracted across social collectives.[fn:7] Important information is not anonymous, details and behaviour are linked to identities in a lasting way that eventually defines the archive. While acknowledging that all computing is social when we consider the wider world of actors, the project aims to focus on the social relationship between technology and sound art. By studying the experience and materials of social computing I hope to recreate the its fundamental theories in an art gallery context. I believe that understanding of social computing can lead to more nuanced critique and considerations of the material aspects of computing.

  The project capitalises on legitimate concerns about social-computing, meditating on the sublime tension between awe and anxiety in end user experience. An important quality of social-computing is that the information is indexed, sorted, accumulated, and stored, often to be traded and sold. This allows data to accrue value and use beyond the present moment a user clicks. As information is always 'linked' to an identity, the accumulation and dissemination of this information unfolds in time.[fn:8] I wish to highlight this sense of accumulation in my works and also consider the impact that social arrangements and actions can have on the meaning of this data. I believe that the terms I have adopted, network experience and digital aesthetics each best describe the characteristics and materials of social computing.

Computers can become a tool to describe embedded values that we often do not take time to take notice of. They can also draw new, arbitrary relations, often highly speculative in their reasoning, which is exciting yet also concerning, as results are likely to be incorrect or even prejudiced.[fn:9] Exploring this area using histories of computation and works on computation theory as an interrogation method, I hope to learn more about the development of the 'values' of social-computation. To portray this relationship I will focus on the phenomenological and aesthetic aspects of social-computing, developing sonically focused art works.  The works use the gallery as a setting for common social-computing techniques, such as data-logging, meta-data extraction, computer vision and algorithmic surveillance, these social manipulations hope to provoke consideration of the historical use and influences behind many computation techniques. There are many unexplored or neglected possibilities within computation due to cultural bias and lack of reflexively about the medium.

I have been researching two ways technology affects our world, when technology privileges experiences mostly compatible within its own structures and signs (particularly its modes of information transfer)[fn:10], and when it encourages appreciations of the world compatible on its own modes of recognition and reasoning. The presence of these two systems, which I term 'Networked Experience' and 'Digital Aesthetics', are inescapable aspects of how technologies function. However their social and cultural limitations need to be recognised and reconsidered if we are to have any hope of ameliorating the 'false promises of the digital revolution' and develop the more radical potentials of these tools. My small gesture is to reifiy the social manipulations that machines can introduce, and explores these ruptures beyond common computing scenarios in the hope of provoking reflection.

   The starting point for Parasite Suite has been to study common anxieties about the proliferation of these systems, particularly as concerns about institutional surveillance, has taken the shine off much of the sublimity and amazement of networked computing. References for the works include critical theories of the digital,[fn:11] as well as works by composers and artists with an interest in the relationship between technology and society, such as Iannis Xenakis, Włodzimierz Kotoński, Laurie Anderson, Zygmunt Krauze, Holly Herndon and Alex Galloway. [fn:12] I believe that phenomenological and aesthetic aspects of social-computation tend to be self-reinforcing, deepening the values that precipitated their own development, to the exclusion of other possibilities. This I term 'parasitism', where technology invites itself as a third participant in all kinds of social negotiations. To me appreciating this parasitic relationship with technology, as both hindrance and possibility for exploration, is the first step in developing new relationships with technology.

   The project is realised as a set of four works that explore social-computing: an installation, an interactive tool, a musical work, and a website. The works contend that humans must be critical of the 'computationality' of the world. The term is a neologism introduced by David Berry in his book /Critical Theory and the Digital/.[fn:13]. It describes an onto-theology informed by the methods of access to information, which Berry argues are networking and software design[fn:14]. Inside compuationality, the methods of access, (through databases, programming paradigms, data transfer protocols and hardware design) develop serious influence over our attitudes to other entities, possibly hindering alternate realms of development. I argue the present computing climate, defined by the tropes of networking and the logic of pattern recognition, predominates relationships with the self and world. As myself willing user, I do not wish to cast this scenario in a negative light, however awareness is a necessary premise for social tensions of computing to be brought to the fore. This concept of a mediated relationship with technology, espoused by Berry, is largely and elaboration to the concept of 'enframing' developed by Martin Heidegger in "The Question Concerning Technology".[fn:15]

   In Waddington's guide to /The Question Concerning Technology/ he explains that Heidegger's work is a breakthrough the way it, "shifts the focus away from specific technologies and toward the modes of thinking that lie behind these technologies."[fn:16] Heidegger also noted that "it is possible to focus on the thinking behind the technology to such an extent that meaningful distinctions in the world are obscured."[fn:17] A remark originally a part of ‘The Question Concerning Technology’, but later excised.[fn:18] 'Enframing' is Heidegger's term for the essence of modern technology. The term describes a danger within modern technologies methods for the accessing truth. In Heidegger's theory, modern technologies reveals truth as a reserve of energy, in tune with the technical paradigms and values of the time (named in Heidegger's terms as 'standing reserve'). We can do nothing about the arrangement of enframing or its influence, it is built into the technology, we can only consider how we will respond to it.[fn:19]  Heidegger doesn't feel that this should necessarily put us off the use of technology, or define it as a bad thing, rather we need to adopt an attitude of 'releasement' (the ability to have a deferential attitude, or apathy, towards the necessity of a technology), that he finds most important.

   The mechanics of enframing are dependant on two kinds of 'concealment', first the operation of a technology is intentionally abstracted by the technology. This abstraction of machinic process allows the technology to be used instrumentally or interact with other technologies, this is often seen in music composition and software design where we abstract complexity or use a software library to focus on a new or previously unreachable area. There is also a second more dangerous kind of concealment, which Heidegger describes as 'concealment of the concealment'[fn:20], it is the taking for granted of a technological abstraction or tool. The first abstraction is treated as a given, or as its own kind of truth, to the point of simulacrum of the representation, such that the technological underpinnings and social epoch are unable to be analysed, doomed to be treated as 'natural'. This second act of concealment is regarded as more insidious, unique to modern technology, and most importantly able to be repudiated through awareness.

     In our parasitic relationship with technology; we use it as a way to advance understanding, yet doing so can dominates our experience and potential. One of the goals of most software is to acheive a simulacrum of 'realness', of the process it is imitating, to the point of being indistinguishable.[fn:17] A sucessful technology can 'dissappear', becoming an unacknowledged part of all experience, this is particularly the case with immitative and surveillant techniques. Studying networked experience and digital aesthetics are methods to reveal instances of the second kind of concelment in common technologies. Through manipulations of techniques and scenario I hope to 'de-black box' a number of social-computing scenarios centred around 'the stream' and 'pattern recognition'. These two dominant metaphors I take as stand-ins for the wider phenomenon of enframing.

** WRITE Networked Experience - An Internet Phenomenology?

   'Networked-Experience' is my term for the phenomenological aspect of social computing, a sensory world where algorithmic processing and connectivity are expected facilitators of experience. Networked experience extends beyond interaction with computers, it is a metaphorical 'revealing' of the world as a network of information streams, able to be connected and manipulated at will. This sensory attitude, applied to computing, is closely associated with cybernetics, as shown in Eden Medina's study of early attemps art providing experiece of the economy as a nervous system in Peron's Chile.[fn:21] The network experience is often a flawed fantasy of the eternal present, where the individual instinctually responds to events in a consumerist haze. However there are wider possbilities, such as those that were the original intention of the Cybersyn network to provide multi-faceted levels of experience and direction, with attempts to emulate cognitive, self-sustaining and pre-emptive modes within the different levels of the cybernetic organisaiton. I wish to argue that it is not the mechanics so much as the purpose for the use of these tools that is lacking.

   Still it is the experience of the 'stream', that is the defining characterstics of the social-computing experience. A 'stream', shorthand for 'streaming-media', refers to the method of delivery of the medium. It is this technique of delivery that enforms the type of enframing the high speed network encourages. That is one in which the paradigmatic metaphors are 'real-time', and 'flow', both metaphors that think of the digital as moving with trajectories and velocities. It is a process of 'exhaustion', where a resource is divided into chunks, delivered in unpredictable order, recieived and reassembled. A post-fordist, 'just in time' re-assembly of digital assets. Berry terms it 'streaming forth', where the demand placed on the world is that of constant data generation and collection, rather than the challenge-response model of Heidegger. This  mode of experience isn't dependant on any kind of technology or state of development, it is possible to create a these kind of experiences entirely with a set of human relations. This was the case with Cyber-Syn, which created cybernetic systems, modeled on the human nervous system, by and large without computers.[fn:22] Streaming describes the manner of access to resources, when it enframes us we expect the methods of access for streaming to apply in all our relations.

   'Streaming' tends to engage in concealment of resources, transport mechanisms and ironically, other users. This can be seen in the somewhat humerous technologies such as 'The twitter sort,'[fn:23] and the word processor soylent ('The word processor with people inside.'), where users of distributed micro-labour systems such as Amazon's Mechanical Turk perform word processing operations.' However rather than rejecting the phenomenon (which I feel is impossible) I'm more interested in what open to social manipulation when this kind of thinking is in use. The easiest way to decide what elements to focus on are to look at the concealments that a technology makes. Firstly I think that accumulation and memory are the first to be ignored in a users attitude, as are the material needs of a technology. The best tools I think to draw out the grain of networked experience, are to firstly create one, and then to start recording and computing the data from history, logs and databases. Much as the providers of services such as Facebook and Twitter do. Alogrithmic processing is made to seem  transparent, direct, and natural, as if a staggering logistical effort isn't taking place every time I make a google search. This sense of effortless computation is often acieved by careful user-interface choices.

   The experience of real-time systems often makes information seem like a vector (or stream ) with a velocity and direction, and one that can be acessed by turning on a tap and directing the flow. The metaphors of streaming make other objects, seem like real time streams of information, broken into chunks and waitign for acknowledgement. This can be seen in paradigms in computer programming [fn:24], that emphasise the metaphor of piping, whereby modules are connected to trasfer an awaited stream of information. It is as much a response to the challenges of dealing with a new paradigm for the delivery of information an application of a metaphor that was already in peoples minds. Berrys's term for this type of experience is 'streaming-forth', as the network  becomes the characteristic mode-of-revealing of nature. 'Streaming-forth' is an expectaton for entities to reveal themselves in terms derived from meatphors about computation.

 This leads to famous phrases that seem typical of the present such as "all you need is data", where data is associated with wisdom (and perhaps even love) [fn:25]. However these data streams also have trajectories, and sources, controlled by physical infrastructure and logistics, controlled by powerful entities, much like a city council or water company. Perhaps the best example of the manner in which streaming-beings, as the model for humans to act as is seen is in the expectatons placed on workers in labour relations. Likewise people also begin to see themseles in terms of being 'streaming-beings', both in terms of producing a multitude of real-time information based on behavior (often used for surveillance and interaction studies). Also we are seen as responding in real time to demands placed on us, as seen in 'zero-hour contracts' that call for workers to dynamically respond to changing work hours (rather than beng called upon as with previous contract based systems). What I am particlarly interested in is mutual real-time meaning making between multiple particpants or kinds of actors.

** WRITE Digital Aesthetics - Computational Ontology

   In contrast to the immediate aspects of networked experience, digital aesthetics are the lasting effects of social computing on reasoning and judgement on culture.[fn:56] They represent a of rupture of the virtual and its logics into the real world. Often termed 'pattern aesthetics'[fn:26], or 'the new aesthetic'[fn:27], these trends describe widespread cultural appreciation for the look and feel of products that bear an obvious hallmark of their interaction with a computer algorithm. The most noticable of theese of often digital nostalgia throwbacks such as pixelated artworks and chip-tunes, however popular trends in architecture, photography and music all bear distinguishing hallmarks of being noticibly digital, even when they try not to be. It is interesting to think of how people can detect a computational presence.


It is more than a digital nostalgia that is producing these kinds of artifacts, Berry argues that is is the popular adaptaation of a different kind of knowledge system, one that machines often use in algorithmic reasoning yet has always been in existence, despite its renewed prominance.[fn:28] The key aspect of this is indetified by Berry as having 'abductive reasoning' as its logical practice. According to Berry, " computers classify according to the patterns which have already been programmed within them. Thus patterns serve to create a language, a /pattern language/, which is a set of classificatory means fo the identification of the type of thing an object presentented to the computer is. not the particular object, but the abstract calass of the object and therefore the abstract properties and understandings that are pre-coded intot he computer and provide the bass of comprehension".

It is also described as process of 'distinction' by Galloway in 'Against the digital'. Similarly to neetworked experience, computational aesthetics were able to be seen well before the advent of personal computers, it is only now that they are ubiquitios and hard to notice however, as with a 'good' photoshop touchup.

 Abductive reasoning is a an approach to reasoning, ubiquitous in its use in software engineering. It is most often used when trying to make judgements working with 'fuzzy' or flawed data sets and can be contrasted with deductive (logic, proof-based) and inductive (probable, evidence based) reasoning. It is the 'fuzziest' kind of reasoning, somewhat akin to a 'best guess'. Abductive reasoning attempts to guess based on the information at hand, refining the set of best guesses as the quality improves or amount of data accumulates. one of the most well known examples included predictive text, other more complex examples have been shown by the google corperation, such as autocomplete suggestions[fn:29], early work on abductive resoning in computers was highly focussed on artificial intelligence[fn:30].

 The resulting experience can be described as a 'pattern language'. A 'pattern language' is something that we can be aware of, but whose methods tries to make itself 'transparent' to us. this appeal to transparency goes beyond the user interface level into all manner of abstractions at all levels of coded space: interfaces, application programming interfaces(apis), objects, macros, function composition, integrated circuits, all exist as abstractions that can make an processes result seem more natural when they hide away complexity. these toos are crucial for managing all of my projects, however the cumulative effect of these tools, often appears as a kind of 'magic' to the person using the tool to prepare an experience, and as a kind of faux 'natural' to the end user, who is intended to be none the wiser.


'computationality' can then be experienced as a combination of computer processing and networking capabilty that embody a particular aesthetic and mode of experience for those that interact with the works [fn:31]. the particulars of the experience and aesthetic of 'computationality' has been specifically collected and outlined by others[fn:32] but i loosely define it as the experiencne of a real world decision that seems influenced or larely determined by by what would be appropriate for the algorithmic sensibilities of a machine rather than a human sense of design aesthetic. the manner in which this is realised

     a particular aspect of the 'computational' i have focussed on is the felt sense that a machine can be treated as a participant and social actor rather than a tool.

** EDIT Historical Studies

it is my argument that aspects of thinking about how computers can be used in art and music are limited by ideological constraints on the kinds of interaction that can be permitted.

the lineage of the the 'california ideology' on interaction with computers today seems to enforce the idea of engagement with a computer being focused on having one operator, holding tight deterministic control over one program utilising an acceptable set of input and output techniques.

however rather than attempting to completely divorce myself from this lineage or propose my own utopia. i wish to make a study of these forces of technoligical ideology and incorperate it into my artworks. by blending representations of the problematic lineage and present state of paranoia with other utopian visions of computing that never quite made it. as well as some of my own ideas about what might be possible in the realm of collaborative experience and new and experimental engagement with machines, others and ourselves. i hope to reintroduce political ideas into the discussion of technology by reintroducing the social and political into the musical and technological landscape.

i argue that there is a link between some aspects of the transhumanism which has influenced much of technological design and desires of transcendence in 20th century music compoers such as john cage that has emphaised transcendce at he expese of 'silencing the social' in the wods of douglas kahn. it is not my wish to decry these works, rather to celebrate and reconsider them in the context of today where we are never sure if we are too connected and being surveilled, or too alone and alienated. instead by seeking o re-empahises teh socaial, collaboratvie aspects of that is already there instead by seeking o re-empahises teh socaial, collaboratvie aspects of that is already there.

as this project, determined in looking at 'possibilities', has a somewhat futuristic bent. i have elected to be somewhat wary of the degree to whih i cast the future in the mod eof my own emplacement. this circular inevitablility of conditioning my works into a kind of 'future-present' is somewhat inescapable. however in an attempt to mitigate this i have tried to take inspiriations for my work from other 'failed utopias' as much as the one i currently reside in.

in looking to early expectations and the failed dreams or unexplored possibilities of early omputer history, particulary notions of socialist computing, artificial intellignece, cybernetic surveilland and hippie counterculture, along with the ideas of modernist music composer such as xenakis, berio and stochausen, who all had similar utopian notions about the future of both society and their art.

the cybersyn surveillance project of allende's chile, the cybernetic counterculture of 1960's san franciso and

i have instead looked at other failed utopias. since this work is a study in the effects of networking and computation.

exploring some of their neglected meanings and history of terms and contrasting that with where the emphasis of specific definition lies today is a key part of the work. by looking at the complete history and meaning of terms, particularly alternate meanings, i feel we can begin to excavate other possibilities, possibilities that were always available but feel cut off from now.

for example, the word computer has a been on a historical journey from meaning a human being that makes calculations, to a device facilitation calculation. however even the interesting parts of that statement miss some of the socio-cultural aspects of what a being a computer means.

for instance that computers were once large teams of people used in warfare to calculate distances, supplies and give reckonings for artillery. or that later computers became numerical analysts, a job that was generally gendered to be for women, and teams of women were given the task of managing early machine-based computers. (hmm prob not necessary, incl. refs).

how to portray this rich and often conflicted history in a word is a difficult task. we see that  a key role for the artist can be excavating meaning. looking that the meanings that have been applied over the years and following a common task in critical theory, asking why certain aspects have traditionally been ignore, or taken as a given. because of this, to begin my process i have given in depth listings of the meaning of key terms for the suite of works.  a dictionary definition offer a reflection on the range of meaning and the suggest links to the history of what are seen as ‘modern’ terms. i am seeking to try and combine and undermine these terms to try and understand my own position.

* WRITE Parasite One
** Summary - Inspiration for Work.

The work is focussed around exploring the idiosyncrasies of networked real time communication in the context of a sound art tradition.

The principal sources of inspiration are a re-interpretation of John Cage’s Imaginary Landscape Number 5 (link). My re-imagined take on the work is also inspired by the oblique networking system of the video game Dark Souls (link appendix), as well as the ‘giant’ piano featured in toy store sequences from the movies Big(link) and Lethal Weapon(link).

The initial version of this installation takes place on a staircase with eight stairs. Each stair has a simple floor trigger underneath and adjacent light source to light up a user's feet when they activate a stair.

Each time the program is run that controls the stairs is initialised the stairs are given a sample to continuously loop from a randomly chosen collection of audio files on the installation computer (link to script for sample picker) to act as its streams.
Under the staircase is a speaker playing eight pre-arranged ‘streams’ of sampled information, the volume of each stream, corresponding to stair, is controlled by the floor triggers.

There is also a website for the installation where users can log on to observe and listen to the installation. Access to the website also offers users two pieces of added functionality. After allowing access to users microphone and camera, they can now trigger staircase responses remotely by hovering over a box representing each stream. However by participating in this manner the user becomes part of the installation, the sounds of their microphone stream replace those of one of the stairs in the installation for as long as they are visiting the site.

Realisations
(Video)

Implications

The work attempts to deal with some of the major themes of the collection of works. Namely by looking at surveillance and the idea of ‘engagement’ with the surveyor. The work attempts to press the

Experience

The observed experience is markedly different for the two kinds of participants in the installation as they assume different roles, In-situ visitors are usually at first surprised by the manner of the

** Technical Outline
*** Intro
The installation parasite is a work that occupies a staircase, using 8 floor panel sensors constructed from conductive material and plastic to form large ‘buttons’. These ‘buttons’ are placed under pieces of carpet and wired to an arduino microcontroller communicating with a small desktop computer.

The computer is set to transmit sound within the space using the audio capabilities of html5’s javascript application programming interfaces (APIs) and the microcontroller messaging and web serving capabilities of the node.js server side javascript language.

What is immediately obvious to the participant is that the computer is set to send messages to turn on 12 volt LED strips attached above the stairs, these light up as participants stand on the floor sensors. The computer is also outputting 8 muted streams of audio, a corresponding stream also having its volume increased also when a user stand upon a floor sensor. A the top stairs visible to those ascending there is a handwritten universal resource locator (URL)
directing those who are interested to visit a web page (currently: www.parasite.ngrok.com
(diagram of installation)

all source code available at https://github.com/brookemitchell/parasiteChat

*** Physical Computing - Arduino Circuit

In the spirit of ongoing development, the circuit constructed is simple enough to understand and designed to emphasise direct user input with highly responsive feedback prioritised above consistency of user experience. Sensors are expected to  register input instantly, resulting in the ability for the user to trigger results multiple times simultaneously by adjusting the weighting of their feet or coerce buttons into a ‘stuck’ state by carefully removing weight off the floor panel. These kinds of user ‘hacks’ and edge cases are encouraged as part of the art work rather than erased by attempts to enforce  total consistency of user interaction.

(img – circuit diagram)

The floor sensors that serve as basic buttons are connected to eight digital inputs on the arduino, using the internal pins of each pin to serve as pull up resistors and create a typical ‘button’ input circuit. To control the lighting eight digital outputs send 5v control voltage signals to eight N-Channel MOSFETs (link). The MOSFET transistors have 12v voltage provided by a separate power rail that is gated by the MOSFET, as controlled from the arduino, a  a corresponding LED strip can be illuminated whenever 5v control voltage is sent from one of the digital out pins.

The firmware of the Arduino is then uploaded with the Standard Firmata microcontroller library (link), which allows for the microcontroller to interpret midi messages over serial.

(Communications Diagram)

*** Server side programming - node.js: express, logfmt, johnny-five and socket.io

The server, a small computer connected to the microcontroller, manages the major communication aspects of the installation, those being communication with the arduino, handling html web page requests and bi-directional webSocket communication with users once the page is sent. These three aspects are each handled within the node.js server-side javascript language by three module libraries,  johnny-five (microcontroller messaging), express(serving dynamically generated web-pages) and socket.io (webSockets management). In addition to this a small logging system is used to store user behaviour for later analysis and a database and archiving system exist to store user messages and video archives.

*** Johnny-Five (link)

The Johnny-Five library allows node.js to communicate with the Microcontroller by sending midi messages over the serial bus to the arduino. The requirements for the arduino in this instance are to register any floor sensor button presses, log them and then send an ‘on’ message to the 12v LED strip corresponding to the panel. The second requirement is to also send this message on to the webSocket management system, to be broadcast to all users. The final requirement is to also receive any messages from webSockets that direct the microcontroller to turn its LEDs on and do so. This third requirement enables the arduino to receive messages from remote participants, in this case so that visitors to the web page can control the installations light and sound by hovering over different buttons, simulating in-person participation.

(img 10 liner johnny-five code snippet)

*** express

Users who visit a web page a served a web page from the installations computer. This page contains the current user numbers of the chat room as well as the necessary authentication tokens for them to use the video chat. To provide the dynamic content the express middleware generates the html necessary. In this case the process is relatively simple, with the content being a  largely static page augmented with dynamically generated user tokens and statistics, as well as the last ten chat messages as retrieved from the database.

*** socket.io (link)

The socket.io library manages webSockets providing a more manageable abstraction for dealing with aschronous realtime messages. As the name implies, the library forms the core of the input/output messaging system of the installation by relaying messages in real time between disparate users and the server. The library can therefore manage all aspects of the chat application and user hover actions. Keeping track of users and their states and broadcasting these messages to all participants as well as broadcasting button triggers on the stairs to all website users.

*** Logging

A simple but key aspect is the ability to accurately log events for later analysis and compositional practice.. In this case a user logging on hovering over of standing on a  step are all given a date and time stamp then logged to a text file. Further user monitoring is handled on the client side by cloud based services firebase.io (link) and openTok (link).

*** Database & Archiving

Chat messages are logged to the cloud base fiebse service as they are received. This provides a complete text archive of all messages that can be acessed using an api from anywhere. Allowing the server to send clients the last ten messages to provide context and possibilities for analysis of the data to inform compositions. Similarly the server-side aspects of the openTok real-time-communication for video library offer a convenient way to archive video chat usage, which is then uploaded to a cloud-based storage instance provided by providers such as microsoft azure or any cloud provider that is currently offering discount cloud computing such as amazon ec2.

*** Client Side Web Programming - Chat, Video and Web Audio


The web server provides two web pages, one outwardly facing root of the web site, which serves the main client side application, a chat room with real time audio/video communication. The second page (henceforth referred to as the ‘host’ page) is served is at  an undisclosed url that provides audio functionality for the staircase and intended only for use in a scenario where a computer is connected to a webcam, speakers and microphone, although the possibilities of ‘hacking’ the host page is left open due to its publicly accessible address.

The ‘host’ page is primarily designed to contain a web audio API ‘audiocontext’ (link to appendix describing web audio api) that is controlled by webSocket messages to turn gain nodes on and off, a buffer and gain node corresponding to each step. This buffer initially contains a long (8 minutes or more) field recording. As users step on floor sensors or web client users hover over a set of 8 boxes , the corresponding gain node of a stair is un-muted.

For further explanation of the webAudio API system please see appendix 1.

(webAudio context diagram of internal signal flow)

The ‘host’ pages user functionality is minimal and specifically designed around the needs of the installation, providing appropriate responses to websocket messages by raising the gain of audio streams if told to by the server or another client. Despite the possibility of

(Video of ‘host’ page demo showing gain being added on step or user hover)

* WRITE Parasite Two

* WRITE Parasite Three

* WRITE Parasite Four

* WRITE Conclusions

  Question of even presenting the material. Is digital art a 'performance', I would argue it is, and that there is a neglected temporality.

  Danger is in emphasising mastry over and about understanding. How over why. Computers are always social.

  Technology as more medium than instrument, instrumental thinking as problematic.

is particular association is identified in “The Question Concerning Technology,” where Heidegger says that as long as we perceive “technology as an instrument, we

remain held fast in the will to master it.”9 A similar theme is taken up and examined by Heidegger in What is Called Thinking?10 Within this text, Heidegger pronounces that Nietzsche’s overman represents the embodiment of pure technological being, insofar as the overman’s will is a will that strives to dominate and master anything that is other.11 Heidegger feels that the overman is not an anomalous phenomenon in the modern technological age. All those who live under the sway of modern technology have to confront this reality. Within the periphery of the epoch of modern technology, “the only thing we have left is purely technological relationships.”12

  The end goal is the hope tat users will envisage teh ways in which existing social engagements can be 're-tooled'. The 'hack' of technology is often not highly technical, instead it is a re-visioning of what a technology could be useful for.




* WRITE Extra Notes

*** Look at study on Links

jockeys[fn:55].
*** WRITE Graph of structure of Computationality

Networked Experience() ->
Abductive Aesthetics() ->
= Computationality ()
both combine into set of qualities

(Berry on Twitter [p. 76])As a form of computational media that is highly social, it presents an interesting case study in relation to our public/private experiences of communication through a computational platform.

   In this respect human relationships with technology occupy a somewhat vexed space, with technology seen as both 'means to an end', a tool of progress or improvement, yet perhaps more importantly technology is also a medium through which we experience the world.

* Footnotes

[fn:1] edina 64

[fn:2] Waddington 576-577

[fn:3] (Kitchin 2011: 946)

[fn:4] Think python p. 7

[fn:5] DEFINITION NOT FOUND: fn:4

[fn:6] Wikipedia social computing https://en.wikipedia.org/wiki/Social_computing

[fn:7] From "Social Computing", introduction to Social Computing special edition of the Communications of the ACM, edited by Douglas Schuler, Volume 37 , Issue 1 (January 1994), Pages: 28 - 108

[fn:8] From "Social Computing", introduction to Social Computing special edition of the Communications of the ACM, edited by Douglas Schuler, Volume 37 , Issue 1 (January 1994), Pages: 28 - 108

[fn:9] http://www.slate.com/articles/technology/bitwise/2015/01/black_box_society_by_frank_pasquale_a_chilling_vision_of_how_big_data_has.html

[fn:10] Paper on organisation structure affecting software design

[fn:11] Theories of the Digital

[fn:12] Put refs for all tehse people here

[fn:13] 'Critical Theory and the Digital'

[fn:14] Heidegger notes in /Being and Time/ that the priveleging of the present has a *parasitic* relationship with the concept of time. This could be extended.

[fn:15] heidegger qct

[fn:16] Waddington 577

[fn:17] Waddington 577

[fn:18] (Harries, 1994, p. 233) IN Waddinton 577

[fn:19] Enframing Heidegger p.2

[fn:20] Second ceoncealment Heidgger

[fn:21] Cybernetic Revolutionaries

[fn:22] ref to dependdence on human actors in cybersyn

[fn:23] Twitter Sort

[fn:24] Streams Programming Languages

[fn:25] All yOu need is data DTD

[fn:26] Pattern Aesthetics

[fn:27] the new Aesthetics

[fn:28] Against the digita

[fn:29] google autocomplete suggestions description link

[fn:30] link between abductive reasoning and ai.

[fn:31] link to uses of term

[fn:32] link to new aesthetic site / files

[fn:33] link to weiner

[fn:34] link de landa, berry.

[fn:35] idea taken from the talk,"the web that wasn't" )[[webthatwasnt][twtw]]

[fn:36] link to deetails on javascript streams

[fn:37] whats a daemon yo.

[fn:38] berry 10

[fn:39] berry 10

[fn:40] softwareised society, link opening of phil of software on dependance on software for survival. berry p.

[fn:41] berry, p. 6.

[fn:42] berry and deleuze, p. 18.

[fn:43] berry p.62

[fn:44] software is eating the

[fn:45] link to treer main history book / topics

[fn:46] stoch to xenakis quote

[fn:47] link five eyes surveillance

[fn:48] def of

[fn:49] link to classic essay about design of saftware informed

[fn:50] any links to this? there was a bit from deland

[fn:51] sousveilance

[fn:52] foucoult link, design of software and oppression

[fn:53] functions in programming.

[fn:54] computers and society

[fn:55] u[fn:5] http://rhizome.org/editorial/2014/oct/22/big-data-little-narration/

[fn:56] (digression on culture)

[fn:57] cultureandcommunication.org/galloway/laruelle-against-the-digital

[fn:58] www.dmytri.info/hackers-cant-solve-surveillance/
