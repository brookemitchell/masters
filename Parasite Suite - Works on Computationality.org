#+TODO: WRITE EDIT REVIEW | DONE DELETE

* Parasite Suite - Sociality, networked computing interfaces and sound
* Introduction
/Ideology gets 'modeled' in software. So in the very perfection of the ideological regime, in the form of its pure digital simulation, comes the death of the ideological regime, and simulation is 'crowned winner' as the absolute horizon of the ideological world./

  /Parasite Suite/ is a collection of works exploring the influence of networked interfaces on artistic practice.[fn:97] I am particularly interested in interfaces that use both remote and local couplings between users and processes. Interfaces represent the boundaries of computing design, the space when a technology is abstracted into a reference,[fn:98] turning it into what is often colloquially known as a 'black-box'. I wish to investigate whether social engagement changes the requirements of interfacing, and thus the kinds of 'black boxes' that we design. I have become particularly interested in the concept articulted by Lev Manovich that database is the new symbolic form,[fn:99] for which access using multiple interfacing systems is the defining characteristic of new-media.[fn:100] In exploring how to design distributed interfaces, I have looked to the thinking behind the software architecture style of Representational State Transfer, in which a deep understanding of the mechanics of the Hypertext Transfer Protocol (HTTP) is used to design an interface that echoes the essential qualities of this distributed database system. I believe that ideology is inherant in interface design, and so through better designed, heterogenous musicla interfaces, we can offer ourselves the chance to experience ideological elements of a database we would have never normally have access to. The term /parasite/ reflects my preoccupation this manner by which technology can extract value as a unacknowledged participant in social interactions, for both empowering and coercive means. My process has involved studying the experience and aesthetics of modern computer use and relating these elements to the process of technological mediation described by Martin Heidegger as /enframing/.[fn:3] Studying the notion of enframing I seek to catagorise some of the values of social computing databases use and make them part of my work, using sound pallettes that I describe as /networked transformations/.

Across all of the works I have focused on utilising a limited sound palette and set of transformations. The two sound types I have focused on are those of a digitally synthesised voice and bell. These two sound types have a strong relationship with the history of sociality and surveillance.[fn:4] This pairing of sound types also have a notable history in the sound art, particularly in the works of Jonathan Harvey[fn:101] and Trevor Wishart.[fn:5] However in contrast to these works from which I draw inspiration, I am focusing on the digital synthesis of voice and bell sounds and transforming them interactively, as a way to both track user information and show how massages can shift in meaning and form when computerised. I am focused on the symbolic value of sounds within networked interactions as opposed to aesthetic or narrative value. Their transformations are an attempt to reflect the analysis of user meta-data as it is collected across all three installations. It is hoped that the sounds become a audible of the many types of computed information that can be extracted from social interaction.

The works confront anxiety about social networking structures and question the types of data collection that underpin computerised social interactions. I believe that interesting group behaviors can take place when we repurpose this technology in a kind of 'sousveillance'.[fn:6] As such my work is not about confronting coercive power structures direcctly, rather it is focused on awareness and reconfigurations of the tools and rhetoric that are available.[fn:7] Digital thinking, such as methods of distinction, has long been present in social relations,[fn:8] however present conditions serve to emphasise particular modes of analysis that I wish to explore.[fn:9] I believe this is due to the usage of computerised sensors and information sorting tools. As such this project must describe both the conditions of computerised social relations and the tools that make it possible. For my project the conditions of social computing are best described as a set of sensation and aesthetic modes privileged by the medium.  While the origin of the factors that influence how we interact with a distributed computer network is beyond the scope of this project, the ramifications can best be described by the dominant metaphors about the network, those of streaming and hyper-media.[fn:10]

Social computing describes a scenario where information is distributed amongst social collectives.[fn:11] Importantly, this information is not provided anonymously, details and behaviour are linked to identities in a lasting way that defines the value of the archive. Social computing presents unique challenges for interfaces and the possibility for collaborative tools, but unfortunately design patterns tend towards single user interfaces, instead of designing for this unique set of experiences and pattern logic. In his summary of the uses of computing, Bret Victor states that there are three primary reasons that people turn to software, for the tasks of, learning, creating, or communicating.[fn:12] Yet in social computing there is a tension of how to design for the convergence of these three kinds of use, with each user possibly engaged in a distinct mode. With How to combine user desires to informing, create and communicate strikes me as one of the most vexed design issues in social computing. Information that once might be treated as digital crumbs  from the table, has become the most valuable, and are potentially damning traces of social computing behaviour. Drawing attention to these data crumbs for expressive means is a large part of this project.

I believe understanding of social computing can lead to consideration of how to design the coupling between interfaces and users as they multiply. Changes in interface shift experience, and I argue this can shift attention to novel or neglected topics. The descriptive phase of this project focuses on researching networked experience and computational aesthetics, two aspects that are key to understanding social computing. The project also meditates on legitimate concerns about social-computing, at our tension between awe and anxiety when we consider the networked world. This is due to the way information is indexed, sorted, accumulated and stored, often to be traded and sold, in ways that are left opaque to the user. Data is left to accrue value across distributed sites, and develops usage beyond the present of user interaction. Data accrues value as both an individual object and a member of a collection of trends as information is always linked to an identity, and the relationship of that identity wide collection of metric points of interest. The accumulation and dissemination of this information unfolds in both time and space.[fn:13] I wish to highlight this sense of accumulation in my works and also consider the impact that social arrangements and actions can have on the meaning of this data. I believe that the terms I have adopted, network experience and digital aesthetics, best describe the characteristics and materials of social computing.

To portray this relationship I will focus on the phenomenological and aesthetic aspects of social-computing. The works use the gallery as a setting for exploring common social-computing techniques, such as data-logging, meta-data extraction, algorithmic sensation and surveillance. These social manipulations hope to provoke consideration of the historical use and influences behind many computation techniques. There are many unexplored or neglected possibilities within computation due to cultural bias and lack of reflexively about the medium.[fn:9] I have been researching two ways technology effects our world, when technology encourages experiences compatible within its own data structures[fn:14] and when it privileges aesthetic trends compatible with its own mode of recognition and reasoning. The presence of these two systems, which I term 'Networked Experience' and 'Digital Aesthetics', are inescapable aspects of how technologies function. However their social and cultural limitations need to be recognised if we are to have any hope of ameliorating the 'false promises of the digital revolution'[fn:15] and develop the more radical potentials of these tools. My small gesture is to reifiy the social manipulations that machines can introduce, and explore ruptures in common computing scenarios in the hope of provoking reflection.

The starting point for Parasite Suite has been to study common anxieties about the proliferation of these systems. Concerns about institutional surveillance have somewhat reduced the charm of networked computing. References for the works include critical theories of the digital,[fn:16] as well as works by composers and artists with an interest in the relationship between technology and society, such as Włodzimierz Kotoński, Laurie Anderson, Lynn Hershman Leeson, Holly Herndon and Alex Galloway.[fn:17] I believe that phenomenological and aesthetic aspects of social-computation tend to be self-reinforcing, deepening the values that precipitated their own development, to the exclusion of other possibilities. This I term /parasitism/, where a technology invites itself as a third participant in all manner of social negotiations. Appreciating this parasitic relationship with technology, as both hindrance and possibility for exploration, is the first step in developing new relationships with technology.

  David Berry argues as networking and software design become the dominant tools for extracting value from the world, we are in a specific phase of enframing.[fn:18] This he terms /computationality/. Inside compuationality, the methods of access, through databases, programming paradigms, data transfer protocols and hardware design, develop serious influence over attitudes to other entities. I argue the present computing climate, defined by the tropes of networking and the logic of pattern recognition, predominates relationships with the self and world. Myself a willing technology user, I do not wish to cast this scenario in a negative light, however awareness is necessary for analysis of social tensions of computing to be brought to the fore. This concept of a mediated relationship with technology, espoused by Berry, is largely an elaboration to the concept of 'enframing' developed by Martin Heidegger in "The Question Concerning Technology".[fn:19]

  I find Heidegger's notion of enframing useful, as opposed to Marshall Mcluhan's notion of mediation. Enframing describes an ontotheology of the world, where the use of modern technology as a tool, has the effect of mediating access to the world when we depend too deeply on concepts that allow its mastery. This theory focuses on the useage of tools and shows a dynamic, metaphor based realationship with technology and its black boxes, rather than focusing on qualities the medium itslef. It is the mechanism by which the values of a technologies importance tends to propgate through to other technologies. It can be seen often in personal computing, in naturalised assumptions about the deisign of user interfaces or in software design where design patterns are assumed. By creating sound based works that challenge conventions about social interaction  design I believe I can come to some sense of appreciation of the dynamics of social computing.

   Waddington's guide to /The Question Concerning Technology/ explains that Heidegger's work is a breakthrough the way it, "shifts the focus away from specific technologies and toward the modes of thinking that lie behind these technologies."[fn:20] . In Heidegger's theory, modern technology reveals truth as a reserve of energy, in tune with the technical paradigms and values of the time (named in Heidegger's terms as 'standing reserve'). We can do nothing about the arrangement of enframing or its influence, it is built into the technology, we can only consider how we will respond to it.[fn:21]  Heidegger does not state that this should necessarily put us off the use of technology, or define it as a bad thing, rather we need to adopt an attitude of 'releasement' (the ability to have a deferential attitude, or apathy, towards the necessity of a technology), that he finds most important.

   The mechanics of enframing are dependant on two kinds of 'concealment'. The first is the intentional abstraction of lower level mechanics of a technology, as is the purpose of any interface. This abstraction of machinic process allows the technology to be used instrumentally or interact with other technologies, often seen in music composition and software design when we abstract complexity or use a software library to focus attention upon a previously unreachable area. There second type of concealment is described as a more dangerous kind of concealment, which Heidegger calls 'concealment of the concealment'.[fn:22] It is the taking for granted of a technological abstraction or tool. The first abstraction is becomes a given, to the point being treated as simulacrum of the representation, such that its technological underpinnings and social epoch are unable to be analysed, doomed to be treated as 'natural'. This second act of concealment is regarded as more insidious, unique to modern technology, and most importantly able to be repudiated through awareness.

   In our parasitic relationship with technology; abstraction advances understanding, yet doing so can dominate our experience and potential. One of the goals of most software is to achieve a simulacrum of 'realness', modelling the process it is imitating, to the point of often being indistinguishable.[fn:23] A successful technology can 'disappear', becoming unacknowledged facilitator of experience. This is particularly the case with imitative and surveillant techniques. Studying networked experience and digital aesthetics reveals instances of the second kind of concealment in common technologies. Through manipulations techniques I hope to 'de-black box' a number of social-computing scenarios, focusing on experience and aesthetics. My definition of an interface applies to any abstraction which encapsulates an  more complex set of operations into a handle. Interfaces are doubtlessly important and necessary, however in social interface design the sharing of information between both humans and applications is many times needlessly constrained, often intentionally so to be siloed and collected. Due to this the experience of computerised social networks goes beyond the dichotomy of online and offline worlds, as our actions and their resultant data accrue value. The extraction of digital labour points to an attitude toward the world highly influenced by some values that coalesce in the tools for this use. I am seeking to encourage responsive engagement and misuse of works that echo many of these common engagements.

* Networked experience

 /“The interface … consists essentially of an area of choice. It both separates and mixes the two worlds that meet together there, that run into it. It becomes a fertile nexus./ [fn:24]

   Networked experience is my term for the phenomenological aspect of social computing. In a networked experience, algorithmic processing is a facilitator of sensory perception. Video games, pornography, shared coding environments, networked music and robotic surgeries are all examples of the emergence of networked sensory systems. Often an interface design is metonymic in its choice of sensory paradigms, choosing to emulate tools associated with the object it is modelling, such as the paintbrush metaphor in photoshop.[fn:25] However occasionally an tool such as email radically changes practices of design at multiple levels. Interface design, text layout and communication protocols have all adapted to social interaction.[fn:26] Like print, radio and film were previously, the internet acts as a super-medium, containing other media.[fn:27] It envelops media such as newspapers, books, television, games and radio as content, while modifying aspects of their aesthetics and meaning. Importantly, the types of alterations are derived from the enveloping medias methods of access to content, they can be streamed, or hyper media, or both.

Hyper media offers non-linear user customised content. In the full definition of hyper media, it is content with multiple levels of referencing, levels of details, user definable paths of access, editing and manipulation.[fn:28] It is the ability to manipulate content at multiple levels that I see as important. Streamed media is that which is delivered and presented by connecting to a provider, without the need (or with the ability removed) for user storage. It is a process of delivery and rendering rather than a tool in itself and can happily coexist with hypermedia. In practical terms however this is often not the case, as providers have control of content and few are willing to allow users to make direct changes to the media, particularly for multimedia. describing the experiences that hyper and streamed media create, common characteristics of hyper-media are: cross-referencing, editing, the ability to alter levels of detail, with links between each of these revisions and a sense of collaboration inthese actions.[fn:29] Characteristics of the stream are information aggregation, feeding, tracking, buffering, chunking, re-ordering and exhaustion. although there is a rich variety of media types on the internet, it seems though it is text that is by far the most hyper, in its ability to be distributed, cross referenced, linked and have form separate from content. Aspects of this are open to remedy, and in the sound world this has driven my interest in the web audio and midi Application Programming Interfaces (APIs).[fn:30]

Streaming has risen to become the paradigmatic method of access today according to David Berry. Defining the metaphors of computerised enfaming. the paradigmatic metaphors are real-time, and flow, both metaphors that think of the digital as moving with trajectories and velocities. It is also a process of exhaustion, where a resource is divided into chunks, and delivered into an unpredictable order, with a 'best attempt' at delivery.[fn:31] The packets then need to be checked by an algorithm, so bits can be re-requested, deleted and re-ordered. It is the computational encoding of a post-fordist, 'just in time' re-assembly of digital assets. The experience of streaming systems often makes information seem like an immaterial vector, with only velocity and direction, and one that can be accessed by turning on a tap and directing the flow. The metaphors of streaming can make all other objects seem like streams of information, waiting to be broken into chunks and waiting for acknowledgement. This can be seen in the emergent paradigms new computer programming languages [fn:32] that emphasises the metaphor of piping, whereby modules are connected to transfer an awaited stream of information. Berrys's term for this type of experience is 'streaming-forth', as the network  becomes the characteristic mode-of-revealing of nature. 'Streaming-forth' is an expectation for entities to reveal themselves in terms derived from metaphors about computation.

 We have seen the rise of process piping and streaming beyond the realm of software design.[fn:33] This process is effecting other areas, as software companies attempt to bring their approaches to software into traditional institutions such as education and the home.[fn:34] Berry terms this mode of thinking about access to the world, 'streaming forth', where the demand placed on the world is that of constant re-ordering, processing and collection, rather than the challenge-response model of heidegger conception of the influence of electrical tools. the mode of streamed experience isn't dependant on any kind of technology or state of development, it is possible to create a these kind of experiences entirely with a set of human relations. This was the case with Cyber-Syn a 1970's project by the Chilean government to create cybernetic economic systems, modelled on the human nervous system, realised by and large without computer access.[fn:35] Streaming describes an attitude towards access to resources, it is an enfraing we expect the methods of access for streaming to apply in all our relations.

   This sensory approach, applied to computing, is closely associated with both cybernetics, as shown in Eden Medina's study of early attempts art providing experience of the economy as a nervous system in Peron's Chile.[fn:36] The streamed experience is often a flawed fantasy of the eternal present, where the individual instinctively responds to events in a consumerist haze. However there were wider possibilities, such as those that were the original intention of the Cybersyn network to provide multi-faceted levels of experience and direction, with attempts to emulate cognitive, self-sustaining and pre-emptive modes within the different levels of the cybernetic organisation. I wish to argue that it is not the mechanics so much as the purpose for the use of these tools that is lacking. Streaming tends to engage in concealment of resources, transport mechanisms and ironically, the participation of other users. This can be seen in the somewhat humorous technologies such as 'The Twitter Sort,'[fn:37] and the word processor Soylent,[fn:38] "The word processor with people inside," where users of Amazon's distributed micro-labour system Mechanical Turk[fn:39] perform word processing operations. Rather than rejecting the phenomenon I am interested in what aspects are open to social manipulation when this kind of thinking is dominant. The easiest way to decide what elements to focus on are to look at the concealment that a technology makes. I think that accumulation and memory are the first to be ignored, as are the material needs of a technology.

   As networked experience extends beyond interaction with computers, into a metaphorical 'revealing' of the world as a network of social scenarios, able to be connected, as long as users are cognisant of the rules of interaction. This kind of ethos is enabled by the design values embedded in computer hardware and software, as influenced by the Californian ideology and the notions of individualistic libertarian impulses that theory entailed.[fn:40] Network technology under these paradigms imbues it with a particular kind of immediacy, but also a sense of danger. It is a de-regulated system that places a heavy burden on users to manage and secure all aspect of their online identity.[fn:41] The contradiction that we often use networks to maintain the notion of individual identity, which is often where it is taken away, seems strange, but I believe the implementation of values in software and hardware is the reason. This is no conspiracy, simply that the standard practice is to reproduce and emulate the models of the past, and programmers are often excellent at emulating a narrow range of design patterns.[fn:42] My project explores this tension between streaming, and hyper-ness. I wish to see the realisation of an interconnected stream of audio that can exist at multiple levels of detail, with links to references, branching and responding. I wish to explore the sensory process of the stream, how it fits into social surveillance and hyper-media, to combine these into a kind of fused media that uses some of the inherent contradictions in the 'feeling' of the stream.

* Abductive Aesthetics

/Thus we arrive at a paradox: any mediating technology is obliged to erase iself to the highest degree possible in the name of unfettered communication, but in doing so it proves its own virtuosic presence as technology, thereby undoing the original erasure./

  In contrast to the immediate aspects of networked experience, digital aesthetics are the lasting effects of social computing on reasoning and judgement.[fn:43] They are a rupture of the digital into the real. The effects of this kind of thinking can be seen clearly in the structure and trends of digital works that prioritise the tools of their creation or draw attention to the limitations of a medium. Often termed 'pattern aesthetic'[fn:44] or 'the new aesthetic'[fn:45] these trends describe widespread cultural shifts in appreciation of objects that bear a hallmark of their interaction with computer algorithms. The most noticeable of these are nostalgic aspects to older computational limitations, such as pixelated artworks and chip-tunes.[fn:46] Popular trends in architecture, photography and music also bear signifiers of digital logic, often by artists the highlighting of the presence of digital tools, Hito Steryl notes the impact of digital modelling tools on the designs of Frank Gehry.[fn:47] Similarly the modern history of dance music shows a particular desire to highlight the impact of tools such as particular models of drum machines. David Berry names this 'Abductive Aesthetics', arguing that the particular logic used in software design informs the look of the digital rather than the popularity of a particular style. This logic is known as abductive reasoning.

  Abductive reasoning, also known as inference to the best explanation, is an approach to reasoning which attempts to test a hypothesis based on the information at hand. For computers it involves continuously refining the set of best guesses as the quality of information improves. It can be contrasted with deductive (proof-based) and inductive (evidence based) reasoning as the fuzziest kind of reasoning, somewhat akin to a 'best guess'. It is ubiquitous in its use by computers, one of the most well known examples of an abductive algorithm is predictive text on cellular phones, but abductive reasoning is a process of distinction used everywhere in computing. Early research on artificial intelligence focused heavily on the use of abductive reasoning.[fn:48] One of the reasons for doing this was to design functions that could handle large data sets without having to maintain state. Maintaining state is akin to keeping track of changes in variables as a progression of events takes place, which becomes unwieldy with a big data set. Abductive reasoning emphasises the spatial over the temporal by avoiding the recording of data within its functions, instead focusing on its mathematical operation to return a new configuration of a data space.

  I am seeking to apply abductive logic as more than a tool by looking at its form and social impact. For this project I wish to explore the application of digital logic to artistic and musical composition and its resulting aesthetic, as well as possibilities for reaching beyond this. Applying abductive reasoning to music, the resulting aesthetic experience can be described as conducting a specific kind of 'pattern language'. It would be a pattern language based suggestions and rapidly testing a hypothesis. Similar to  jumping to conclusions until all our tests for truth pass. To act abductively with music, I believe we need to design musical systems that collect information and respond with a best match.

  A 'pattern language' is something that we can be aware of, but whose methods try to make themselves invisible to us. This desire for invisibility goes beyond the user interface level to all manners of coded space: interfaces, application programming interfaces, objects, macros, function composition, integrated circuits, all exist as abstractions that can make an processes result seem more natural when they hide away complexity. The use of astracted tools is crucial all of my projects, however the cumulative effect of these tools, often appears as a kind of 'magic' to the user. Later they begin to seem 'natural' to the end user, who is intended to be none the wiser. Social interfaces can be experienced as a combination of computer processing and networking capability that embody a particular aesthetic and set of practices for those that interact with the works.[fn:49]  A particular aspect of the computational I have focused on is the felt sense that a machine can be treated as a participant and social actor rather than a tool.

  What abductive reasoning offers in difficult to parse patternings. A condition exemplified in the social. Abductive recognition does not focus on the time-line of events, to find an implication, but rather on the spatial characteristics of a set of values, for instance if they match the qualities of a matrix of vectors. The aesthetics of abductive reasoning can be thought of as consisting of several model types, each with their own characteristics, but a common thread of converting actions over time into a spatial arrangement. These pattern matching patterns, are broadly outlined by Berry as template-matching, prototype matching, feature analysis, recognition by components, Fourier analysis, and lastly bottom-up and top-down processing.[fn:50] By using abductive reasoning as a composition tool we can see the process of recognition in action, and begin to think about its effect. The characteristics which I wish to bring to my art works are those of spatial, speculative, and generative. Abductive reasoning invites us to consider a algorithms image of the world, and what these algorithms mean to us as ways to regulate our behaviour. This approach to reasoning and experience is deeply connected to the history of computation, particularly that leading to the development of the personal computer.

* Parasite One
** Summary

/Definitions of the parasite, according to Michel Serres:
1. To one side of (para) the location of the event (site) – the­ medium or being through which communication must pass.
2. The ‘static’ that interrupts the transmission of a message.
3. The uninvited guest or ‘social’ parasite.
4. A living organism that takes without giving as it infects its hosts
5. The one who is always near to food, close to the meat
6. A thermal exciter, that which catalyses the system to a new equilibrium state/

   This installation takes place on a staircase, occupying seven stairs. Each stair has a floor trigger underneath with adjacent light source set to illuminate each stair as a participant passes through the space. Hidden under the staircase sits a speaker that plays a different section of seven vocal excerpts assigned to each step. Each sound is a gated segment of a looping vocal piece created using Vocaloid software,[fn:51] where each stair sings a tale of a computer processes work for the day. There is also a website for the installation where users can log on to observe the space and listen to the installation. Access to the website also offers users added functionality. After allowing access to a users microphone and camera, users can now trigger staircase responses remotely, by hovering or touching a translucent box overlaying the visual image of each stair.

The computer is set to turn on the twelve volt light attached to each stair in response to either an action on the website or physical trigger. The installation is also constantly looping through seven chanels of audio, with each channel having its volume output gated to increase only when a user stands upon a floor sensor. At the top of the stairs, visible to those ascending, there is a handwritten Universal Resource Locator (URL) directing those who are interested to visit a web page.[fn:52] By participating online the user also becomes part of the installation, the sounds of their microphone stream replace those of one of the stairs in the installation, for as long as they are visiting the site, but only triggered if they select their stair or a user stands upon the floor sensor. The stair whose sound a user becomes is dependant on the time of day they visit the site and the number of current users. Over the course of the installation, the sung elements begin to degrade and fragment according to the data collected on the usage of the stairs, which collates both physical and virutal users as they 'wear' down the sounds on each step.

 The observed experience is distinct but shared for the two types of participants. In-situ visitors are usually surprised by the hidden apparatus and illumination of their movement. There is an element of digital fantasy that gives way to the more concerning on repeated visits as the sounds begin to wear and fade. For the virtual visitor there is a similar shift in mode, as at first the power to survey and control gives way to a disembodied self, as they begin to occupy the space that they are surveying and add artistic purpose to the work through their engagement. Some  of the principal sources of inspiration are a of John Cage's Imaginary Landscape Number 5,[fn:53] This re-imagining of the work is also inspired by the oblique and text-less the player networking system of the video game Dark Souls[fn:54], the 'cut up' word techniques of William Burroughs[fn:55], as well as novelty 'giant' piano featured in landmark toy stores, used in sequences from the movies Big[fn:56] and Lethal Weapon.[fn:57] Taking these elements and exploring the sensory and aesthetic possibilites of network and attempting to convey some of the anxiety and novelty to users sonically is the driving force of the work.

** Technical Outline

   Custom built floor panels are placed under pieces of carpet and wired to the General Purpuse In/Out(GPIO) pins of a Beagleboard embedded computer. The Beagleboard manages the pins using its built in microcontroller chip,[fn:58] while the embedded computer serves the website at http://1.parasite.club. The computer is also scripted to open a local web page that responds to webSocket[fn:59] messages and manages audio output. The local page is set to loop seven channels of sound within the space using the audio capabilities of a Web Audio Application Programming Interface (API).[fn:60] The floor sensors serve as basic buttons contructed using metal tape and plastic. These are connected to seven digital inputs on the Beagleboard, using the internal pins of each pin to serve as pull up resistors. To control the lighting seven digital outputs send 3.3 volt control signals to the transistors, each gating a light's power, as provided by a separate power rail. Should either a webSocket message or button press be received, the web page is set to gate the sound of the appropriate loop, and the Beagleboard to light the corresponding lighting strip.

   The server on the computer manages the three major communication systems of the installation. These are communication with the GPIO pins, handling web requests, and bi-directional socket communication with users.[fn:61] WebRTC protocols enabled on the client side web page allow a teleconferencing like arrangement to be quickly established so that users can monitor each other and the server. All of these communication tools are each controlled within the node.js language on the server-side.[fn:62] Lastly a small logging system is used to store user behaviour for later analysis, while a cloud based archiving system exists to store archives of user video. At a predetermined time each day a small script is run that applies a transformation from the Composers Desktop Project[fn:63] to the streams of audio on the basis of logged usage of each stair. The script is set to remove the loudest frequencies from the spectral domain and average the quieter frequecies slightly if the stair has been used, weighting the effect of the basis of usage. After this a second transformation is applied on the basis of whether the predominant types of usage for the day were local or remote. After reading the types of usage from the log a spectral transformation is applied twice. The transformation is a weighted replacement of spectral amplitude with a bell and a user excerpt for each stair, wieghted on the basis of usage during the day. This transformation uses the COMBINE CROSS function of the Composers Desktop Project software.[fn:64] The extent of modification is designed to be very slight, with the intention of most sounds only reaching a fully morphed state, over a period of thirty days. After thirty days the sounds are reset to their initial state.

 The website uses the Johnny-Five javascript library[fn:65] that allows the server to communicate with the computer's built-in micro-controller.[fn:66] The requirements for the Beagleboard are to register any floor sensor button presses, log them and send a digital 'high' message to the transistor corresponding to each light. The second requirement is to broadcast this message as a webSocket message, so that each clients interface reflects the current state of the system. The last requirement is to receive any webSocket messages, trigger the floor panels and broadcast the state change to all clients. Users who visit the web page are served a unique interface from the Beagleboard. This page contains a real time video of the room as well as the necessary authentication tokens for them to stream their own media to a stair's audio channel. Authenitcated user tokens for each media stream are generated by the express library,[fn:67] server middleware that provides the dynamic content necessary. The local page that only the installation has access to is designed to act as a simple audio engine that can respond to webSocket messages, and gate the looped sound buffers or user audio. It has little in the way as user interface and is primarily designed to contain a Web Audio API 'audiocontext'[fn:68] that allows the web site to function as a source of dynamic audio.

* Parasite Two
** Summary

   Parasite Two is a audio/visual installation that combines a interactive topographic surface with a sequencing and synthesis system. A projector and depth sensing camera are mounted over a box of sand and connected to a computer and speaker system. A topographic relief map is projected onto the surface that is able to be interactively reshaped by the user. This landscape informs a process of stochastic synthesis as the surface is scanned, while the steepness of the relief determine the speed of movement for a sequencer and density of topographic lines triggers events. The work is inspiried by the writings of Lev Manovich on databases interfacing and the camera.[fn:69] He argues that new media is focused on the camera, and that it is access to the database, and the multiplicipty of interfaces, that informs a new media work.[fn:70] The networked interfacing and interaction that takes place here isn't connected across the internet, rather it is local feedback loop between user manipulation and multiple software programs.

   The installation involves a large glass box containing white sand, with speakers and a computer placed adjacent. Above the sandbox a projector and depth sensing camera are mounted. The camera senses the depth of the sandbox surface beneath and overlays a set of topological data. The contours are treated as a series of waveforms that are rendered by the musical system. The participant is placed into the role of composer of landscape and given a view over the environs. The installation is designed to be used by multiple particpants at once where users can cooperate or work against each other. In a similar manner the resources of the camera and projector feed are shared by the computer applicaitons. The works aims to consider the relation between the camera, data and interface.

 Parasite Two is an attempt to incorporate computational and networked approaches to photographic intelligence as a method for musical composition. While Parasite I focused on communications intelligence and interpersonal relations, Parasite II is centred on Photographic Intelligence (PHOTINT) as a musical method. Also commonly known as Imagery Intelligence (IMGINT), this kind of intelligence and analysis is commonly associated with satellite photography and drone warfare. In this installation I seek to use methods derived from the history of technology as an interface to landscape and topology that become musical environments. Here I am treating the notion of landscape as a kind of database. Through the use of a simple medium like sand a surface becomes a complex interface to sound and light.

 A second aspect of the creative inspiration for the project is the arrangement of novel communication between software programs. Each program uses the same sensory information but styles it using a different logic and syntax that informs the audio and visual outcome. This is an early form of what Manuel DeLanda has termed a 'Pandemonium'[fn:71] . In its ultimate form, processes would operate as small modular forms of artificial intelligence. As it is experienced in the gallery context, the sensation of effecting both audible and visual landscape is, like the other installations, hoped to be both thrilling and mildly sinister.

** Technical Outline

   The installation consists of a open top glass box of dimensions 0.75 meter x 1m x 0.15 meter depth, filled with 50 kilograms of white sand. Directly above the box a short-throw projector and depth sensing camera (Microsoft Kinect)[fn:72] are mounted. These are connected to a desktop computer running Linux, with a graphics card and audio output. Management of the camera driver and visual rendering software is controlled by the software SARndbox, an augmented virtual reality system developed by Oliver Kreylos at the  University of Davis California Computer Science Department.[fn:73] The software forms a feedback loop as the calibrated depth information from the camera becomes Open Graphics Library shader data,[fn:74] which can be adjusted in real time by users altering the depth of the sand surface.

   I have created a custom version of the SARndbox software that adds the ability to transmit Open Sound Control(OSC) messages to the software.[fn:75] From this the depth matrix of the sand surface is transmitted over a User Datagram Protocol(UDP) port to be used by the IanniX,[fn:76] a three dimensional sequencer that supports OSC. IanniX takes the depth matrix and transforms this into a grid of 75 horizontal curves for each centimeter of height in the box. Each curve varies the height of its curve according to the depth map, and is able to measure the distnce to the nearest curve. Along each curve travels a cursor which varies its speed according to the steepness of the curve and is able to likewise detect its proximity to nearly cursors. All of this information on the placement of curves, location of cursors and proximity of cursors and lines is re-broadcast to be passed to synthesis intruments built in Overtone[fn:77], a software which uses the SuperCollider sythesis engine.[fn:78] There I use a version of Xenakis' GENDY synthesiser designed by Nick Collins[fn:79] two sample triggering instruments set to trigger the voice loops an bells crated from the first installation.

   IanniX is a modern implementation of Iannis Xenakis HPIC visual arrangement system. Iannix takes the matrix of depth values from a Kinect camera and creates a set of curvers, which act as the set of curves that control the synthesis. Along each curve travels a cursor, meaning the can be a massive number of cursors all moving at different rates.[fn:80] The position of each cursor is relayed over OSC to  the audio rendering system, collisions between curves are also able to be detected, forming events. The sound is rendered using an implementation of Iannis Xenakis' GENDY stochastic synthesiser.[fn:81] The GENDY system will map sets of break points to contours of the landscape, with elevation determining the frequency, cursor proximity the event distribution and line proximity the amplitude. Collisions between cursors are seperately rendered and triggers for samples collected from the first installation.

* Parasite Three
** Summary

   Parasite Three collects and networks together disparate materials from the previous installations and reformulates their data into a performance piece. The piece restates the notion that networks can act as a interfaces that can  alter the experience and aesthetics of an art. The work is a summary of the concepts from the previous installations and also a new interpretation of the aesthetics and experience of their data. The work has three components: a haptic interface to render local network activity as physical sensation, a stochastic sequencer that maps trends from data logged in the previous installations, a set of controls and basic musical instrument. The performer is given free-license to interpret, improvise and manipulate with these interfaces. The purpose of the work is to give a performance that conveys the themes of the other installations and embeds one deeper within the practice of networking as art.

   Before the performance a short talk is given explaning the materials and methods. The performance computer is running a set of customised sofware that tracks all network activety at the nearest router and converts some of the key values to OSC messages. Patterns in network behavior can be deduced by observing details of the network packages protocol headers. Meanwhile a script has been run against the data logs from the previous installations to analise their data, which forms the score and prescribes the arangement of materials for the piece. The work seeks to feed disparate pools of meta-information through a performance system and see if which aesthetic choices, technological capabilities and social signalling methods interact proficently together. It is an experimental method of live performance where the performer focuses on managing the emergent properties of the system and finding a manner to interact with the possibility space.

** Tech Outline

   The performed work uses three channels of sound mixed to a stereo output. The first channel uses the final samples from the Parasite One installation. This series of samples now serve as micro-level samples for sequencing in the Cosmosƒ program.[fn:82] Each sound is assigned its own synthesis engine within the program and the triggering of these sounds is set to be controlled by a probability distribution. The software is an interpretation of a stochastic sequencing system descreibed by Xenakis in Formalised Music.[fn:83] It has a multi-level(micro and meso) sequencer whose parameters can be changed by a stochastic modulation system. The samples are distributed in a manner appropriate for a probability distribution, with the most frequently used sounds occupying middled of the distribution. Relevant parameters are mapped to a faderfox FX3 controller.[fn:84] The controller is set to stop the output of any of the seven samples from playing. It can also toggle on or off the playback of seven meso-level events. The other controls are set to enable or disable pitch modulation for each sample, change the rate of modulation and change, or freeze, the calculation of probability distributions for any stochastic models.

   The second channel uses an instrument built specifically for the performance, the Firefader,[fn:85] an open source haptic interface developed by Edgar Berdhal. The instrument is comprised of two motorised faders with capacitive sensing to ascertain when a user touches one of the faders. The interface uses a haptic feedback loop with physical models built in the musical programming language of the users choice. After registering that the performer is touching the interface, the network activty messages received are translated to weight forces on spring models. The Max/MSP patch that handles the messages and synthesis has been constructed using the Firefader's physical modelling libraries.[fn:86] At set points along the faders path of travel they trigger resonant bell models, whose sound is routed back to the Digital Audio Workstation to be mixed with the other sources. The forces on the springs will cause the faders to move and strike the bells of their own accord, however the forcee can also be strugged used by the performer, as the force of a strike is reflected in the output of the bells physical model. The experience of using this instrument is slightly uncanny and somewhat akin to struggling against a phantom hand.

 The third channel is a simple monophonic synthesiser over which a response is improvised. Any monophonic sysntheser with an adjustable glide and the ability to tune the keys is suitable, the performer is encouraged to use a tuning fit for the mood of the performance. The instrument can be played with any keyboard controller available, although I have a preverence for one that alows per-note pitch bending, for example the Keith McMillan QuNexus.[fn:87] One hand is expected to be controlling the fireFader and Cosmosƒ controls so the expectation is that this instrument should be simple to play single-handedly.

 The performance will begin by allowing the sequencer of Cosmosƒ to run while experimenting with controls until a suitable long term state is reached. This should be a setting that offers an interesting combination of sound development is combined with a fair amount of repetition. The haptic interface's audio is to be left muted during this time, with it's only sound to be the movement of its faders and motors if the performer elects to touch one of its faders to activate its movement. At any point the player is able to improvise on the keyboard, although it is most likely at periods requiring less control over the sequencer. At a certain point the performer is expected to unmute the volume for the haptic interface's bells, lower the volume of the sequencer, and to experiment with the combination of the three elements. Once feeling comfortable with the structure of the machnic behavior, for a period the performer is expected to play a unaccompanied improvisation on the keyboard. After this the audio volume of the haptic interface is again lifted and the performance shifts into a struggle between playing the bells and playing short abrupt passages from the solo improvisation. Lastly the sound of the sequencer returns and the performer is expected to remove elements and eventually lower sppeds and frequencies before fading out the sequencer.

* Conclusions

the fragile nature of communication means that the line between message, noise and meta-information is often fluid and blurred.

  Networked social systems shift collaboration into an atemporal, spatially ditributed form, leading to changes in social patterns of behavior. Yet my short exploration has shown that these kinds of engagement do not reside entirely in an online world. Aesthetic and sensory attitudes are just as much part of the 'real' world, and digtal thinking and computational appraoches to sociality are equally able to be analysed in scenarios away from direct engagement with a computer. The experience and aesthetic of the internet are can be involved in many states of being, and the logic of a distinction between online and offline is unhelpful.[fn:88] Meta-information and noise are conecpts implicit in all social communications, and social engagements where there is tension over what falls into these categories for which actors has always been present.[fn:89] Another finding I have made is that despite any technological changes, there is a suprising paucity of shared, collaborative tools in hybrid situations of interaface access, such as to allow both in multi user and remote interaction wiht hte same information. I encourage the development of conecpts such as /Community Computing/.
Distributed cognition. Shared information spaces.Tangible user interfaces.

 This notion would perhaps see a return to the notion of the shared computing resource with multiple methods of access. I see there being possibility for this in architectures like the shared networked sound systems of Supercollider sound engines,[fn:90] that can be accessed using any interface method, in person or across networks.[fn:91]

 The internet is already one such database of multiple access however even there the selection of interfacing is limited, and can be threateded by the whims of service providers. I welcome developments such as the Web Audio API as methods to remidy this and offer alternative sensory methods of access a cyber-space.

We should de more critical about the social manipulations of everyday life, and who is now committing these changes, the methods generally have not chaneged, however there is a state of fl;ux in hte actors.

  Working through these projects that thinking about the nature of networked interfacing, I have begun to appreciate the futility of developing a narrative of progress toward enlightenment about the practice of networked sociality.

 Although at first I believed I was seeking to commmunicate some kind of reality of the situation.

 Instead I have begun to see software is part of our subjectivity, rather than a tool. However there is a danger in the way its methods can narrow our perception rather than enlarge them. The process by which I developed this project was not from a carefully chosen theme, but rather a methodology where I have sought to describe some of the 'back boxes' of communications that I interact with on a daily basis.

  In studying the experience and aesthetics of social computing, I've found that the tools we use are often more interesting in ensuring that we continue to use them as a catch all solution, rahter than expanding our usgge into a multiplicity of options.

/Software can become a trap that enslaves us in our desire to master it.
Technology as more medium than instrument, instrumental thinking as problematic. Trapped in a will that strives to dominate and master anything that is other.[fn:92] All those who live under the sway of modern technology have to confront this reality. Within the periphery of the epoch of modern technology, “the only thing we have left is purely technological relationships.”[fn:93]/Enframing Heids Phil

 I think that information access, as a user defined subjective interface and not maniplulation, is a key issue.

  Sound begets more sound, writing begets more writing, editing is a productive process as works are split and multiply. Previously in text and sound work as insight are found that are perhaps not relevant to the issue at hand and either discarded or split into new works, hyper- linking allows for these connections and pathways to remain rendered. For a multiplicity of thought. Echoing Lev Manovich's thoughts I have found the networked media refute notions of narrative and instead evoke the experience of the database. The discovery of a need for a multiplicity of interfaces that give the ability to use adopt and change access to the substrate of the media, are part of what make new-media useful.

  Within this area I have also found that there is tension in the role assued of users. Often it seems that a users creatvie world is assumed to be inside the machine, and that the machine must model the universe, rather than act as a supplement or augmentation. I see this as the tension between virtual worlds and augmented worlds. Furthermor ein the social realms, it can often be aleinating to have information shared, but not a common sense of interface. I have tried to illustrae these tensions in works that do both, and provoek both kinds of sensations at once.

 Too often arts seem to further atomise users into a specific kind of lonely creative with a task to perform, rather than a collective identity. Much of this is caused by social media, and that there is very little that is social in social media at its worst.

 Another thing we often dont' realise that we are often productng much more thn we realise, and even mainitaining the domnant ios aform of creative conststruction. Power of metadata. I have tried to create a series of wworks based on the digital ephemera. The value of information, and the heriachies and roles that make its value fluid nad subjective, are one of the truest expressions af sociality, and it is the sociality that is by and large being used against us.

Following Galloway I think that the best way to empower users is to offer them multiple ways of considering themselves, rather than multiple kinds of objects.

The distinction between on and offline is false. The method of access has already changed our attitude to information and existance.

What is understanding, vs. mastry. Is understanding deep exploration. Pay attention to the social dynamic of the tools that you have.

Shift understanding. Hyper into understanding, stream into contingency.

Question of even presenting the material. Is digital art a performance, I would argue it is, and that there is a neglected temporality.

Danger is in emphasising mastry over and about understanding. How over why. Computers are always social.

is particular association is identified in “The Question Concerning Technology,” where Heidegger says that as long as we perceive “technology as an instrument, we

  The end goal is the hope that users will envisage the ways in which existing social engagements can be 're-tooled'. New interfaces are not highly technical, instead it is a revisioning of how to use what we already have.

on a personal level one piece of anecdotal evidence that i have noticed is the large number of programmers and ict (informatin communicatons technolgy) workers that are musicians, composers or disc.
The last thing I think is that the ideology, aesthetics and practices of code should be more deeply considered, and then reflected in the interfaces that we design. By neglecting to create interfaces that offer interpretation of the underlying substrate, we do a great disservice to our users. I find this the root cause of balack boxing, and an excellent site for radical design, reinvention and contention over meaning and purpose. Radically repurposeing a database is an excellent way to challenge preconceived notions of what  meaterial is for. And better considering the material itself offers access and possibilities for expanson, rather than obfusticating techniity which can sometimes be the resul of calls for transparency.


I have found that distributed collaboration hasa strong affect on the kinds of interface we have to design. The idea of acess and locaiton of sound, and the kinds of souns that we make.
* Footnotes

[fn:1] CosmosF

[fn:2] http://shirky.com/writings/group_politics.html

[fn:3] Enframing

[fn:4] Bells Voices, Communication and Warfare.

[fn:5] examples link sound bell history

[fn:6] Sousveilllance link

[fn:7] Webpage of dig anth lady

[fn:8] See Galloway Laurel

[fn:9] Link to magic words.

[fn:10] Durther avenues to pursue for more details

[fn:11] From "Social Computing", introduction to Social Computing special edition of the Communications of the ACM, edited by Douglas Schuler, Volume 37 , Issue 1 (January 1994), Pages: 28 - 108

[fn:12] http://worrydream.com/MagicInk/#manipulation_software_design_is_hard

[fn:13] From "Social Computing", introduction to Social Computing special edition of the Communications of the ACM, edited by Douglas Schuler, Volume 37 , Issue 1 (January 1994), Pages: 28 - 108

[fn:14] Paper on organisation structure effecting software design

[fn:15] False promises of Dig Rev

[fn:16] Theories of the Digital

[fn:17] Put refs for all tehse people here

[fn:18] Heidegger notes in /Being and Time/ that the priveleging of the present has a *parasitic* relationship with the concept of time. This could be extended.

[fn:19] heidegger qct

[fn:20] Waddington 577
Heidegger also noted that "it is possible to focus on the thinking behind the technology to such an extent that meaningful distinctions in the world are obscured."[fn:23] This remark was originally a part of ‘The Question Concerning Technology’, but later excised.[fn:94]

[fn:21] Enframing Heidegger p.2

[fn:22] Second ceoncealment Heidgger

[fn:23] Waddington 577

[fn:24] François Dagognet, Faces, Surfaces, Interfaces (Paris: Librairie Philosophique J. Vrin, 1982), 49

[fn:25] Ref to Application layer of TCP/IP

[fn:26] /E-mail emerged in 1971 when users began experimenting with ways of sending electronic messages from one networked computer to another. in her study of the internet's origins, Janet Abbate writes that e-mail "remade" the arpanet system and caused it to be see 'not as a computer system but rather as a communication sytem/ (ref.82) 1.[fn:95]

[fn:27] Berry on 'super-mediums'

[fn:28] See Ted Nelson hyper media

[fn:29] Nelson Dream Machines

[fn:30] Web Audio API

[fn:31] See the deisgn of TCP/IP, also md5 sums

[fn:32] Streams Programming Languages

[fn:33] See streaming in js, matz pipe language

[fn:34] Agile family management

[fn:35] ref to dependdence on human actors in cybersyn

[fn:36] Cybernetic Revolutionaries

[fn:37] Twitter Sort

[fn:38] Soylent web site

[fn:39] Mechanical Turk

[fn:40] Link california ideology works

[fn:41] /The visions of a free, uncensorable cyberspace envisioned by Barlow, Gilmore and others was incompatible with the needs of Capital, and thus the libertarian impulses that drives Silicon valley caused a change in tune. Cyberspace was no longer a new world, declared independent with its own unalienable rights, it was now an untamed frontier, a wild-west where spooks and cypherpunks do battle and your worth is measured by your crypto slinging skills and operational security... This, as Seda Gurses argues, leads to Responsibilization... Users themselves are responsible for their privacy and safety online. No more unalienable rights, no more censorship resistant mass networks, no more expressing beliefs without fear of being silenced. Hack or be hacked./[fn:96]

[fn:42] repetition of design patterns

[fn:43] (digression on culture)

[fn:44] Pattern Aesthetics

[fn:45] the new Aesthetics

[fn:46] Chip tunes and pixel art

[fn:47] Is the museum a battle field

[fn:48] link between abductive reasoning and ai.

[fn:49] link to uses of term

[fn:50] From Berry:
Template Matching: This is where a computational device uses a set of images (or templates) against which it can compare a data set, which might be an image for example (for examples of an image set, see Cole et al. 2004). Template Matching (Jahangir 2008)

Prototype Matching: This form of patten matching uses a set of prototypes, which are understood as an average characteristic of a particular object or form. The key is that there does not need to be a perfect match merely a high probability of likelihood that the object and prototype are similar (for an example, see Antonina et al. 2003).

Feature Analysis: In this approach a variety of approaches are combined including detection, pattern dissection, feature comparison, and recognition. Essentially the source data is broken into key features or patterns to be compared with a library of partial objects to be matched with (for examples, see Morgan n.d.).

Recognition by Components: In this approach objects are understood to be made up of what are called 'geons' or geometric primitives. A sample of data or images is then processed through feature detectors which are programmed to look for curves, edges, etc. or through a geo detector which looks for simple 2D or 3D forms such as cylinders, bricks, wedges, cones, circles, and rectangles (see Biederman 1987).

Fourier Analysis: This form of pattern matching uses algorithms to decompose something into smaller pieces which can then be selectively analysed. This decomposition process itself is called the Fourier transform.  For example, an image might be broken down into a set of twenty squares across the image field, each of which being smaller, is made faster to process. As Moler (2004) argues, 'we all use Fourier analysis every day without even knowing it. Cell phones, disc drives, DVDs, and JPEGs all involve fast finite Fourier transforms'. Fourier transformation is also used to generate a compact representation of a signal. For example, JPEG compression uses a variant of the Fourier transformation (discrete cosine transform) of small square pieces of the digital image.

The Fourier components of each square are then rounded to lower arithmetic precision, and weak components are discarded, so that the remaining components can be stored in much less computer memory or storage space. To reconstruct the image, each image square is reassembled from the preserved approximate Fourier-transformed components, which are then inverse-transformed to produce an approximation of the original image, this is why the image can produce 'blocky' or the distinctive digital artefacts in the rendered image, see JPEG (2012).

Bottom-up and Top-down Processing: Finally, in the Bottom-up and Top-down methods an interpretation emerges from the data, this is called data-driven or bottom-up processing. Here the interpretation of a data set to be determined mostly by information collected, not by your prior models or structures being fitted to the data, hence this approach looks for repeated patterns that emerge from the data. The idea is that starting with no knowledge the software is able to learn to draw generalisations from particular examples. Alternatively an approach where prior knowledge or structures are applied data is fitted into these models to see if there is a 'fit'. This approach is sometimes called schema-driven or top-down processing. A schema is a pattern formed earlier in a data set or drawn from previous information (Dewey 2011).

[fn:51] Vocaloid

[fn:52] WebPage addr.

[fn:53] Cage Imaginary Landscpe No. 5

[fn:54] Dark souls

[fn:55] Burroughs Cut up Technique

[fn:56] Movie Big

[fn:57] Lethal Weapon

[fn:58] Beagleboard microcontroller specs

[fn:59] webSocket

[fn:60] Web Audio API

[fn:61] WebRTC

[fn:62] node.js

[fn:63] CDP project

[fn:64] Combine Cross CDP

[fn:65] Johnny Five

[fn:66] Beagleboard microcontroller specs

[fn:67] Express.jss

[fn:68] Web Audio "AUDIOCONTEXT"

[fn:69] Manovich database and New Media

[fn:70] Manovich camera and New Media

[fn:71] Delanda Pendemonium

[fn:72] Microsoft Kinect

[fn:73] SARndbox

[fn:74] openGL shaders

[fn:75] Github link to custom sarndbox repo

[fn:76] Iannix

[fn:77] Overtone

[fn:78] SuperCollider

[fn:79] GEndy Nick Collins

[fn:80] Iannix manual

[fn:81] GENDY link

[fn:82] CosmosF

[fn:83] Xenakis Formalised

[fn:84] Faderfox FX3

[fn:85] Firefader

[fn:86] Firefader libraries

[fn:87] Keith McMilllan QuNexs

[fn:88] http://ak.vbroek.org/2014/02/

[fn:89] /‘Noise calls for decipherment; it makes a reading of the message more difficult. And yet without it, there would be no message. There is, in short, no message without resistance’./

[fn:90] SuperOCllider OSC Model

[fn:91] See overtone, and Sam speech.

[fn:92] Berry 11

[fn:93] Heidegger Spiegel Interview

[fn:94] (Harries, 1994, p. 233) IN Waddinton 577

[fn:95] edina 64

[fn:96] www.dmytri.info/hackers-cant-solve-surveillance/

[fn:97] /The radical change was de-coupling groups in space and time. To get a conversation going around a conference table or campfire, you need to gather everyone in the same place at the same moment. By undoing those restrictions, the internet has ushered in a host of new social patterns, from the mailing list to the chat room to the weblog.[fn:1][fn:2]/

[fn:98] In computer programming a handle is an abstract reference to a resource. A handle is an abstraction of the resource which is managed externally (Wiki) - Handle_(computing)

[fn:99] Manovich, database new symbolic formd.

[fn:100] Manovich essay exact ref pls. Multiple interfaces.

[fn:101] Jonathon Harvey
