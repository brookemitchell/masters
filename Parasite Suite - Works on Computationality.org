#+TODO: WRITE EDIT REVIEW | DONE DELETE
* Extra Idea.
  - Title: New Media Interfaces
  - Interfaces and metonyms, not metaphors
  - New media art is about databases, and havig multiple methods of access tp the data.
  - Project about understanding databases, hopeing to make beter abstractions, as understanding and abstraciton re the same thing. Gregory Chaitin, a noted computer scientist, propounds a view that comprehension is a kind of data compression.
  - Surveillance is the best new-media art.
  - multiple visions of the database exist simultaneously, depends on mode of acess and identity/permissions.
  - OD- service provides info and various ways to shape it. everything api.

* Parasite Suite: A study in new media interfaces.

* Abstract

  /Parasite Suite/ is a collection of works exploring the use of the database in artistic practice. I have sought to design interfaces which allow multiple methods of access and analysis to databases in order to create novel engagements. I am particularly interested in desiging hardware that embodies the concepts of 'hyper-media', providing multiple non-linear methods for users to alter and interpret information. In studying the use of new media interfaces it is my contention that modern surveillane techniques are quintissential forms of 'new-media art'. This is due to the manner in which they developed the methods of taking databases and using multiple methods of access and analysis of behavior to extract recognise patterns and narratives. Following the troubling implications of the simularities between new-media and surveillance is a central theme of the works.

* Introduction

A interface can be seen as a crucial point of abstraction, where underlying mechanics and implementation details are compressed into a point of access that, at best, offers clear comprehension of the underlying structure. [fn:2] Yet more often we find ourselves struggling to engage with what is often colloquially known as a 'black-box'. I wish to investigate whether social engagement changes the requirements of interfacing, and thus the kinds of 'black boxes' that we design. I content that user interfaces always have an idealogical bias towards an imagined model of end user that will most clearly comprehend the interface. However social and surveillant interfaces both challenge the notion of a final user with a multiplicity of interests and heirachy of access methods that can often shift dynamically. (Hmm give a little more...)

 I have become particularly interested in the concept articulated by Lev Manovich that the database, as opposed to narrative, is driving new artistic forms,[fn:3] he defines new-media as a subset of these new forms where there are multiple methods to a database access.[fn:4] My works exploring how to design social interfaces when collecting information from social engagments and render alternative sensory outputs from the more commonly expected mapping. (Hmm give a little more...) I believe that ideology is inherent in interface design, and so through better designed, heterogeneous musical interfaces, we can offer ourselves the chance to experience ideological elements of a database we would have never normally have access to. For example my third work Parasite III is an interface the quantifies the giving and receiving of information packets from the Google Corperation's network servers into a physical pushing and pulling sensation.

 The term /parasite/ reflects my preoccupation this manner by which technology can extract surplus value as an unacknowledged participant in social interactions, for both convenient and coercive means. My process has involved studying the experience and aesthetics of modern computer use and relating these elements to the process of technological mediation described by Martin Heidegger as /enframing/.[fn:5] Studying the notion of enframing I seek to categorise some of that of social computing databases use and make them part of my work, using sound palettes that I describe as /networked transformations/.

Across all of the works I have focused on utilising a limited sound palette and set of transformations. The two sound types I have focused on are those of a digitally synthesised voice and bell. These two sound types have a strong relationship with the history of sociality and surveillance.[fn:6] These are significant in my work as I wish to offer a material connection between the history of surveillance and computing.(Hmm give a little more...)

 This pairing of sound types also have a notable history in the sonic art and are particularly well known for their pairing in Mortuos Plango, Vivos Voco by Jonathan Harvey[fn:7]. This is significant because... There are also well known works by...

 I am focusing on the digital synthesis of human singing and bell sounds, and transforming them in relation to changes in each works underlying data, as a way to both track user information and show how messages can shift in meaning and form when computerised. I am focusing on the symbolic value of sounds in networked interactions. Their transformations are an attempt to reflect the analysis of user meta-data burning turned into sound meta-data, collected across all three installations. (Add more...) It is hoped that the sounds become audible records of the many types of computed information that can be extracted from social interaction.

The works confront anxiety about social networking structures and question the types of data collection that underpin computerised social interactions. I believe that interesting group behaviours can take place when we re-purpose and warn each other about this technology in a kind of participatory 'sousveillance'.[fn:8] As such my work is not about confronting coercive power structures directly, rather it is focused on awareness and reconfiguration of the tools and rhetoric that are available.

The term 'social computing' describes a scenario where information is collected and disseminated about social collectives. Importantly, this information is not provided anonymously, but rather details and behaviour are linked to identities in a lasting way that determines the value of the database.

I feel social computing presents unique challenges for interfaces and the possibility to design novel collaborative tools. Unfortunately designs often repeat notions derived single user paradigms, instead of designing software for the unique set of experiences possible with multiple, distributed users that breaks the sense of alienation through user controlled dynamic musical experiences. For example...

In networked computing scenarios we see the value of information can be relative, from relative uselessness to the individual, to having massive monetary value once stored, compared and cross-referenced. In the realm of surveillance, information that might once have been treated as digital crumbs from the table, has become highly valuable, not for its contents but the set of relationships that a communication can illustrate. Drawing attention to these data crumbs for expressive means is a large part of this project. For example...

 Changes in interface shift a relationship with underlying data, for example..
 and I argue this can shift attention to novel or neglected topics.

 The descriptive phase of this project focuses on researching networked experience and computational aesthetics, two topics that are key to understanding social computing. The project also considers legitimate concerns about social-computing, and the tensions between awe and anxiety when we consider the networked world. This is due to the way information is indexed, sorted, accumulated and stored, often to be traded and sold, in ways that are opaque not even known to the user.

As data is left to accrue value across distributed sites, and develops usage beyond the immediate of user interaction. The accumulation and dissemination of this information unfolds in both time and space in ways that are impossible for the creator to sense.[fn:11] In a broad sense therse works wonder if it would be possible to maintain a sensory link with our data as it travels across time and space. For example...

To portray this relationship I will focus on the phenomenological and aesthetic aspects of social-computing. My works use the gallery as a setting for exploring common social-computing techniques, such as data-logging, meta-data extraction, algorithmic data extraction and surveillance. My use of technology for social manipulation hopes to provoke consideration of the historical use and influences behind many computation techniques. For example...

 I have been researching two ways technology effects our world; when technology emphasises experiences compatible with its own data structures and when technology creates aesthetic trends born of its own quirks of recognition and reasoning methodology. These of these two systems, are widely termed 'Networked Experience' and 'Digital Aesthetics'. I have adoped these terms from the work of David Berry in Critical Theory and the Digital[fn:78] and other technology critics. I have chosen these terms because ... and will discuss them in the following sections.

 (However their social and cultural limitations need to be recognised if we are to have any hope of ameliorating the 'false promises of the digital revolution' and develop the more radical potentials of these tools. Lack of materiality...??? My small gesture is to refit the social manipulations that machines can introduce, and explore ruptures in common computing scenarios in the hope of provoking reflection.)

The starting point for Parasite Suite has been to study common anxieties about the proliferation of these systems. For example concerns about institutional surveillance have somewhat reduced the charm of networked computing. References for the works include critical theories of the digital, as well as works by composers and artists with an interest in the relationship between technology and society, such as Włodzimierz Kotoński, Laurie Anderson, Lynn Hershman Leeson, Holly Herndon and Alex Galloway.

As modern society deals with the amount of technological saturation in social engagements today, technology can be thought of as a guest that invites itself as a third participant in all manner of social negotiations. This I term /parasitism/, where a technology capitalises on its use to encourage its own continued usage. I interpret the methods by which a technolgy seeks to entrench its role within our lives as having both phenomenological and aesthetic implications, for example...

  Appreciating this parasitic relationship with technology, as both hindrance and an area for artistic exploration, is a key part of my approach in these projects.

  David Berry argues that as networking and software design become the crucial tools for extracting value, we are in a specific type of relationship with technology which he terms /computationality/.[fn:12] Inside compuationality, methods of access through databases, programming paradigms, data transfer protocols and hardware design develop into user attitudes towards other entities. In the present computing envorinment, the tropes of networking and the methods of computerised behavior recognition have mediated relationships between the self and world. As a technology user, I do not wish to cast this scenario in an entirely negative light, however awareness is necessary for analysis of social tensions of computing to be brought to the fore. This concept of a mediated relationship with technology, espoused by Berry, is largely an elaboration to the concept of 'enframing' developed by Martin Heidegger in "The Question Concerning Technology".[fn:13] In Heidegger's theory, modern technology reveals truth as a reserve of energy, in tune with the technical paradigms and values of the time. We can do nothing about the arrangement of enframing or its influence, it is built into the technology, we can only consider how we will respond to it.[fn:15]

  I find Heidegger's notion of enframing useful, as opposed to Marshall Mcluhan's notion of mediation. Enframing describes a belief about the influence of technological trends on a persons being in the world. Enframing is idea that the use of modern technology as a means to an end has the effect of interfering in other experiences. This is because acheiving proper mastery of the tool requires adopting specific thought patterns and attitudes that will later ensure its continued usage. It can be crudely simplified as a kind of narrow-mindedness that effects a culture at large, similar to the common phrase, "if all you have is a hammer, everything looks like a nail"[fn:79]

 The theory of enframing focuses on the usage of tools and shows a dynamic, metaphor based relationship with technology and its abstractions, rather than focusing on qualities of the medium itself. Enframing is also the mechanism by which the values of common technologies to propagate through to new ones. It can be seen often in personal computing assumptions about the design of user interfaces, or in software design where traditional desktop design patterns are assumed to be appropirate in new areas such as for hypertext markup language interfaces. By creating sound based works that challenge some conventions about interaction design I believe I can come to some sense of appreciation of the enframed qualities of social computing. Waddington's guide to /The Question Concerning Technology/ explains that Heidegger's work is a breakthrough in the way it, "shifts the focus away from specific technologies and toward the modes of thinking that lie behind these technologies.".[fn:14]

 In our parasitic relationship with technology, abstraction advances understanding, yet doing so can dominate our experience and potential. One of the goals of most software is to achieve a simulacrum of 'realness', modelling the process it is imitating, to the point of often being indistinguishable for this.[fn:16] A successful technology can 'disappear', becoming unacknowledged facilitator of experience. This is particularly the case with imitative and surveillant techniques. For example...

 Studying networked experience and digital aesthetics reveals instances of the second kind of concealment in common technologies. Through manipulations techniques I hope to 'de-black box' a number of social-computing scenarios, focusing on experience and aesthetics. My definition of an interface applies to any abstraction which encapsulates a more complex set of operations into a compressed set of essential behaviors and relationships.

 Interfaces are doubtlessly important and necessary, however in social interface design the sharing of information between both humans and applications is often times needlessly constrained, sometimes intentionally as information can be siloed and collected. I am seeking to encourage the use of tools that offer alternate interfaces to commonly available information in order suggest designers adopt an approach informed by new media where multiple methods of access and values placed on information are possible..

* Networked experience

   Networked experience is the term I use for the phenomenological aspect of social computing, derived from the studies of embodiment in networking by Anna Munster.[fn:80] Within a networked experience, algorithmic processing is a facilitator of sensory perception. Video games, online pornography, shared coding environments, networked music and robotic medical operations are all examples of the emergence of networked sensory systems. Often an interface design is metonymic in its choice of sensory paradigms, choosing to emulate tools associated with the object it is modelling, such as the 'paintbrush' metaphor used for many actions in image editing programs. However occasionally an tool such as email radically changes practices of design at multiple levels, such as electronic mail changin interface design, text layout and communication protocols.[fn:18] Like print, radio and film were previously, the internet acts as a super-medium, containing other media.[fn:19] It envelops media such as newspapers, books, television, games and radio as content, while modifying aspects of their aesthetics and meaning. For example the internet has altered the medium of television with the advent of streaming services such as NetFlix[fn:81], for which the old constraint of and episodic length appropriate for scheuling is no longer required, but remains a structural method of distinction between television, mini-series and film, despite the lines often blurring. Importantly, the types of alterations made to enveloped media are derived from material realities of teh super-mediums methods of distributing to content, be it in a stream, podcast or interactive format.

Hyper-media offers non-linear user customised content, with multiple manners in which to follow references(or links). In its full prescription by Ted Nelson hyper-media would have levels of details, user definable paths of access and access to content editing.[fn:20] It is the ability to access content at multiple levels of details from many acess points that I see as important, as I see this ability to freely access data offering the ability to make data based art that can re-interpret, refute and critique its own sources. By contrast streamed media is is delivered and presented by connecting to a provider, without the need (or with the ability removed) for user storage. It is a process of delivery and rendering rather than a tool in itself and can happily coexist with hypermedia. In practical terms however this is often not the case, as providers have control of content and few are willing to allow users to make direct changes to the media, particularly for multimedia. I use both techniques in my work to show the ways in which power heirachies are present on the network. For example...

According to David Berry, streaming has become the paradigmatic method of access to media today. For streaming, the architypal metaphors are real-time and flow, both metaphors that characterise the digital as moving with trajectories and velocities. It is also a process of exhaustion, where a resource is divided into chunks, and delivered into an unpredictable order, with a 'best attempt' at delivery.[fn:22] The packets then need to be checked by an algorithm, so bits can be re-requested, deleted and re-ordered. It is the computational encoding of a post-Fordist, 'just in time' re-assembly of digital assets. The experience of streaming systems often makes information seem like an immaterial vector, with only velocity and direction, and one that can be accessed by turning on a tap and directing the flow. The metaphors of streaming can make all other objects seem like streams of information, waiting to be broken into chunks and waiting for acknowledgement. This can be seen in the emergent paradigms new computer programming languages [fn:23] that emphasises the metaphor of piping, whereby modules are connected to transfer an awaited stream of information.

Berrys's term for this type of experience is 'streaming-forth'. 'Streaming-forth' is an expectation for entities to reveal themselves in terms derived from metaphors about computation. I interpret this Heideggerian term as meaning that the qualities of streaming have become a methodology for our approaches to extracting value from the wider-world. We place demands upon nature that are mediated by our experiences with the network, such as emphasing the connectivity of natual systems in models close to our own, or seeing animal communications in terms of network packet lie transmissions. These behaviors may exist, however it is the notion that we are imposing the attitudes of our economically informed bahavior onto the world that Beryy wishes to emphasise. Similarly we have seen the rise of metaphors about process piping and streaming beyond the realm of software design.[fn:24] This process is effecting other areas, as software companies attempt to bring their approaches to software into traditional institutions such as education and the home.[fn:25]

The streamed experience is often a flawed fantasy of the eternal present, where the individual instinctively responds to events in a consumerist haze.  Streaming tends to conceal resources, transport mechanisms and ironically, the participation of other users. This can be seen in the somewhat humorous technologies such as 'The Twitter Sort,'[fn:28] and the word processor Soylent,[fn:29] "The word processor with people inside," where users of Amazon's distributed micro-labour system Mechanical Turk[fn:30] perform word processing operations. Rather than rejecting the phenomenon of streaming inforemed thinking I am interested in what aspects of streaming technology are open to manipulation, my projects each take an existing transmission mechanism and make alterations to allow new ways to access the database of information contained within. I wish to explore the sensory process of the stream, how it fits into social surveillance and hyper-media, to combine these into a kind of fused media that uses some of the inherent contradictions in the 'feeling' of the stream. Eventually I wish to consider the creation of a kind of 'hyper-audio'. Hypothetically it would be a sound object that can exist at multiple levels of detail, with links to references, changable, responsive and interactive.

* Abductive Aesthetics

In contrast to the immediate aspects of networked experience, digital aesthetics are the lasting effects of social computing on reasoning and judgement. They are a rupture of the digital into the real. The effects of this kind of thinking can be seen clearly in the structure and trends of digital works that prioritise the tools of their creation or draw attention to the limitations of a medium. Often termed 'pattern aesthetic'[fn:34] or 'the new aesthetic'[fn:35] these trends describe widespread cultural shifts in appreciation of objects that bear a hallmark of their interaction with computer algorithms. The most noticeable of these are nostalgic aspects to older computational limitations, such as pixelated artworks and chip-tunes. Popular trends in architecture, photography and music also bear signifiers of digital logic, often by artists the highlighting of the presence of digital tools, Hito Steryl notes the impact of digital modelling tools on the designs of Frank Gehry.[fn:36] Similarly the modern history of dance music shows a particular desire to highlight the impact of tools such as particular models of drum machines. David Berry names this 'Abductive Aesthetics', arguing that the particular logic used in software design informs the look of the digital rather than the popularity of a particular style. This logic is known as abductive reasoning.

Abductive reasoning, also known as inference to the best explanation, is an approach to reasoning which attempts to test a hypothesis based on the information at hand. For computers it involves continuously refining the set of best guesses as the quality of information improves. It can be contrasted with deductive (proof-based) and inductive (evidence based) reasoning as the fuzziest kind of reasoning, somewhat akin to a 'best guess'. It is ubiquitous in its use by computers, one of the most well known examples of an abductive algorithm is predictive text on cellular phones, but abductive reasoning is a process of distinction used everywhere in computing. Early research on artificial intelligence focused heavily on the use of abductive reasoning.[fn:37] One of the reasons for doing this was to design functions that could handle large data sets without having to maintain state. Maintaining state is akin to keeping track of changes in variables as a progression of events takes place, which becomes unwieldy with a big data set. Abductive reasoning emphasises the spatial over the temporal by avoiding the recording of data within its functions, instead focusing on its mathematical operation to return a new configuration of a data space.

  I am seeking to apply abductive logic as more than a tool by looking at its form and social impact. For this project I wish to explore the application of digital logic to artistic and musical composition and its resulting aesthetic, as well as possibilities for reaching beyond this. Applying abductive reasoning to music, the resulting aesthetic experience can be described as conducting a specific kind of 'pattern language'. It would be a pattern language based suggestions and rapidly testing a hypothesis. Similar to  jumping to conclusions until all our tests for truth pass. To act abductively with music, I believe we need to design musical systems that collect information and respond with a best match.

  A 'pattern language' is something that we can be aware of, but whose methods try to make themselves invisible to us. This desire for invisibility goes beyond the user interface level to all manners of coded space: interfaces, application programming interfaces, objects, macros, function composition, integrated circuits, all exist as abstractions that can make an processes result seem more natural when they hide away complexity. The use of abstracted tools is crucial all of my projects, however the cumulative effect of these tools, often appears as a kind of 'magic' to the user. Later they begin to seem 'natural' to the end user, who is intended to be none the wiser. Social interfaces can be experienced as a combination of computer processing and networking capability that embody a particular aesthetic and set of practices for those that interact with the works. A particular aspect of the computational I have focused on is the felt sense that a machine can be treated as a participant and social actor rather than a tool.

  Abductive recognition does not focus on the time-line of events to find an implication, but rather on the spatial characteristics of a set of values, for instance if they match the qualities of a matrix of vectors. The aesthetics of abductive reasoning can be thought of as consisting of several model types, each with their own characteristics, but a common thread is the method of converting points in time to a spatial arrangement. These pattern matching patterns, are broadly outlined by Berry as template-matching, prototype matching, feature analysis, recognition by components, Fourier analysis, and lastly bottom-up and top-down processing.[fn:38] By using abductive reasoning as a composition tool we can see the process of recognition in action, and begin to think about its effect on the layout of a database. Abductive reasoning invites us to consider an algorithmic vision of the world, and what these algorithms mean to us as ways to regulate our behaviour.

* Parasite One
** Summary

   This installation takes place on a staircase, occupying seven stairs. Each stair has a floor trigger underneath with adjacent light source set to illuminate each stair as a participant passes through the space. Hidden under the staircase sits a speaker that plays a different section of seven vocal excerpts assigned to each step. Each sound is a gated segment of a looping vocal piece created using Vocaloid software,[fn:39] where each stair sings a tale of a computer processes work for the day. There is also a website for the installation where users can log on to observe the space and listen to the installation. Access to the website also offers users added functionality. After allowing access to a users microphone and camera, users can now trigger staircase responses remotely, by hovering or touching a translucent box overlaying the visual image of each stair.

   The computer is set to turn on the twelve volt light attached to each stair in response to either an action on the website or physical trigger. The installation is also constantly looping through seven channels of audio, with each channel having its volume output gated to increase only when a user stands upon a floor sensor. At the top of the stairs, visible to those ascending, there is a handwritten Universal Resource Locator (URL) directing those who are interested to visit a web page. By participating online the user also becomes part of the installation, the sounds of their microphone stream replace those of one of the stairs in the installation, for as long as they are visiting the site, but only triggered if they select their stair or a user stands upon the floor sensor. The stair whose sound a user becomes is dependant on the time of day they visit the site and the number of current users. Over the course of the installation, the sung elements begin to degrade and fragment according to the data collected on the usage of the stairs, which collates both physical and virtual users as they 'wear' down the sounds on each step.

   The observed experience is distinct but shared for the two types of participants. In-situ visitors are usually surprised by the hidden apparatus and illumination of their movement. There is an element of digital fantasy that gives way to the more concerning on repeated visits as the sounds begin to wear and fade. For the virtual visitor there is a similar shift in mode, as at first the power to survey and control gives way to a disembodied self, as they begin to occupy the space that they are surveying and add artistic purpose to the work through their engagement. Some  of the principal sources of inspiration are a of John Cage's Imaginary Landscape Number 5,[fn:40] This re-imagining of the work is also inspired by the oblique and text-less the player networking system of the video game Dark Souls[fn:41], the 'cut up' word techniques of William Burroughs[fn:42], as well as novelty 'giant' piano featured in landmark toy stores, used in sequences from the movies Big[fn:43] and Lethal Weapon.[fn:44] Taking these elements and exploring the sensory and aesthetic possibilities of network and attempting to convey some of the anxiety and novelty to users sonically is the driving force of the work.

** Technical Outline

   Custom built floor panels are placed under pieces of carpet and wired to the General Purpose In/Out(GPIO) pins of a Beagleboard embedded computer. The Beagleboard manages the pins using its built in micro-controller chip,[fn:45] while the embedded computer serves the website at http://1.parasite.club. The computer is also scripted to open a local web page that responds to webSocket[fn:46] messages and manages audio output. The local page is set to loop seven channels of sound within the space using the audio capabilities of a Web Audio Application Programming Interface (API).[fn:47] The floor sensors serve as basic buttons constructed using metal tape and plastic. These are connected to seven digital inputs on the Beagleboard, using the internal pins of each pin to serve as pull up resistors. To control the lighting seven digital outputs send 3.3 volt control signals to the transistors, each gating a light's power, as provided by a separate power rail. Should either a webSocket message or button press be received, the web page is set to gate the sound of the appropriate loop, and the Beagleboard to light the corresponding lighting strip.

   The server on the computer manages the three major communication systems of the installation. These are communication with the GPIO pins, handling web requests, and bi-directional socket communication with users.[fn:48] WebRTC protocols enabled on the client side web page allow a teleconferencing like arrangement to be quickly established so that users can monitor each other and the server. All of these communication tools are each controlled within the node.js language on the server-side.[fn:49] Lastly a small logging system is used to store user behaviour for later analysis, while a cloud based archiving system exists to store archives of user video. At a predetermined time each day a small script is run that applies a transformation from the Composers Desktop Project[fn:50] to the streams of audio on the basis of logged usage of each stair. The script is set to remove the loudest frequencies from the spectral domain and average the quieter frequencies slightly if the stair has been used, weighting the effect of the basis of usage. After this a second transformation is applied on the basis of whether the predominant types of usage for the day were local or remote. After reading the types of usage from the log a spectral transformation is applied twice. The transformation is a weighted replacement of spectral amplitude with a bell and a user excerpt for each stair, weighted on the basis of usage during the day. This transformation uses the COMBINE CROSS function of the Composers Desktop Project software.[fn:51] The extent of modification is designed to be very slight, with the intention of most sounds only reaching a fully morphed state, over a period of thirty days. After thirty days the sounds are reset to their initial state.

 The website uses the Johnny-Five JavaScript library[fn:52] that allows the server to communicate with the computer's built-in micro-controller.[fn:53] The requirements for the Beagleboard are to register any floor sensor button presses, log them and send a digital 'high' message to the transistor corresponding to each light. The second requirement is to broadcast this message as a webSocket message, so that each clients interface reflects the current state of the system. The last requirement is to receive any webSocket messages, trigger the floor panels and broadcast the state change to all clients. Users who visit the web page are served a unique interface from the Beagleboard. This page contains a real time video of the room as well as the necessary authentication tokens for them to stream their own media to a stair's audio channel. Authenticated user tokens for each media stream are generated by the express library,[fn:54] server middle-ware that provides the dynamic content necessary. The local page that only the installation has access to is designed to act as a simple audio engine that can respond to webSocket messages, and gate the looped sound buffers or user audio. It has little in the way as user interface and is primarily designed to contain a Web Audio API 'audiocontext'[fn:55] that allows the web site to function as a source of dynamic audio.

* Parasite Two
** Summary

   Parasite Two is a audio/visual installation that combines a interactive topographic surface with a sequencing and synthesis system. A projector and depth sensing camera are mounted over a box of sand and connected to a computer and speaker system. A topographic relief map is projected onto the surface that is able to be interactively reshaped by the user. This landscape informs a process of stochastic synthesis as the surface is scanned, while the steepness of the relief determine the speed of movement for a sequencer and density of topographic lines triggers events. The work is inspired by the writings of Lev Manovich on databases interfacing and the camera.[fn:56] He argues that new media is focused on the camera, and that it is access to the database, and the multiplicity of interfaces, that informs a new media work.[fn:57] The networked interfacing and interaction that takes place here isn't connected across the internet, rather it is local feedback loop between user manipulation and multiple software programs.

   The installation involves a large glass box containing white sand, with speakers and a computer placed adjacent. Above the sandbox a projector and depth sensing camera are mounted. The camera senses the depth of the sandbox surface beneath and overlays a set of topological data. The contours are treated as a series of wave-forms that are rendered by the musical system. The participant is placed into the role of composer of landscape and given a view over the environs. The installation is designed to be used by multiple participants at once where users can cooperate or work against each other. In a similar manner the resources of the camera and projector feed are shared by the computer applications. The works aims to consider the relation between the camera, data and interface.

 Parasite Two is an attempt to incorporate computational and networked approaches to photographic intelligence as a method for musical composition. While Parasite I focused on communications intelligence and interpersonal relations, Parasite II is centred on Photographic Intelligence (PHOTINT) as a musical method. Also commonly known as Imagery Intelligence (IMGINT), this kind of intelligence and analysis is commonly associated with satellite photography and drone warfare. In this installation I seek to use methods derived from the history of technology as an interface to landscape and topology that become musical environments. Here I am treating the notion of landscape as a kind of database. Through the use of a simple medium like sand a surface becomes a complex interface to sound and light.

 A second aspect of the creative inspiration for the project is the arrangement of novel communication between software programs. Each program uses the same sensory information but styles it using a different logic and syntax that informs the audio and visual outcome. This is an early form of what Manuel DeLanda has termed a 'Pandemonium'[fn:58], in its ultimate form, processes would operate as small modular forms of artificial intelligence. As it is experienced in the gallery context, the sensation of effecting both audible and visual landscape is, like the other installations, hoped to be both thrilling and mildly sinister.

** Technical Outline

   The installation consists of a open top glass box of dimensions 0.75 meter x 1m x 0.15 meter depth, filled with 50 kilograms of white sand. Directly above the box a short-throw projector and depth sensing camera (Microsoft Kinect)[fn:59] are mounted. These are connected to a desktop computer running Linux, with a graphics card and audio output. Management of the camera driver and visual rendering software is controlled by the software SARndbox, an augmented virtual reality system developed by Oliver Kreylos at the  University of Davis California Computer Science Department.[fn:60] The software forms a feedback loop as the calibrated depth information from the camera becomes Open Graphics Library shader data, which can be adjusted in real time by users altering the depth of the sand surface.

   I have created a custom version of the SARndbox software that adds the ability to transmit Open Sound Control(OSC) messages to the software. From this the depth matrix of the sand surface is transmitted over a User Datagram Protocol(UDP) port to be used by the IanniX,[fn:61] a three dimensional sequencer that supports OSC. IanniX takes the depth matrix and transforms this into a grid of 75 horizontal curves for each centimetre of height in the box. Each curve varies the height of its curve according to the depth map, and is able to measure the distance to the nearest curve. Along each curve travels a cursor which varies its speed according to the steepness of the curve and is able to likewise detect its proximity to nearly cursors. All of this information on the placement of curves, location of cursors and proximity of cursors and lines is re-broadcast to be passed to synthesis instruments built in Overtone[fn:62], a software which uses the SuperCollider synthesis engine.[fn:63] There I use a version of Xenakis' GENDY synthesiser designed by Nick Collins[fn:64] two sample triggering instruments set to trigger the voice loops an bells crated from the first installation.

   IanniX is a modern implementation of Iannis Xenakis HPIC visual arrangement system. Iannix takes the matrix of depth values from a Kinect camera and creates a set of curves, which act as the set of curves that control the synthesis. Along each curve travels a cursor, meaning the can be a massive number of cursors all moving at different rates.[fn:65] The position of each cursor is relayed over OSC to  the audio rendering system, collisions between curves are also able to be detected, forming events. The sound is rendered using an implementation of Iannis Xenakis' GENDY stochastic synthesiser.[fn:66] The GENDY system will map sets of break points to contours of the landscape, with elevation determining the frequency, cursor proximity the event distribution and line proximity the amplitude. Collisions between cursors are separately rendered and triggers for samples collected from the first installation.

* Parasite Three
** Summary

   Parasite Three collects and networks together disparate materials from the previous installations and reformulates their data into a performance piece. The piece restates the notion that networks can act as a interfaces that can  alter the experience and aesthetics of an art. The work is a summary of the concepts from the previous installations and also a new interpretation of the aesthetics and experience of their data. The work has three components: a haptic interface to render local network activity as physical sensation, a stochastic sequencer that maps trends from data logged in the previous installations, a set of controls and basic musical instrument. The performer is given free-license to interpret, improvise and manipulate with these interfaces. The purpose of the work is to give a performance that conveys the themes of the other installations and embeds one deeper within the practice of networking as art.

   Before the performance a short talk is given explaining the materials and methods. The performance computer is running a set of customised software that tracks all network activity at the nearest router and converts some of the key values to OSC messages. Patterns in network behaviour can be deduced by observing details of the network packages protocol headers. Meanwhile a script has been run against the data logs from the previous installations to analyse their data, which forms the score and prescribes the arrangement of materials for the piece. The work seeks to feed disparate pools of meta-information through a performance system and see if which aesthetic choices, technological capabilities and social signalling methods interact proficiently together. It is an experimental method of live performance where the performer focuses on managing the emergent properties of the system and finding a manner to interact with the possibility space.

** Technical Outline
   The performed work uses three channels of sound mixed to a stereo output. The first channel uses the final samples from the Parasite One installation. This series of samples now serve as micro-level samples for sequencing in the Cosmosƒ program.[fn:67] Each sound is assigned its own synthesis engine within the program and the triggering of these sounds is set to be controlled by a probability distribution. The software is an interpretation of a stochastic sequencing system described by Xenakis in Formalised Music.[fn:68] It has a multi-level(micro and meso) sequencer whose parameters can be changed by a stochastic modulation system. The samples are distributed in a manner appropriate for a probability distribution, with the most frequently used sounds occupying the middle of the distribution. Relevant parameters are mapped to a faderfox FX3 controller.[fn:69] The controller is set to stop the output of any of the seven samples from playing. It can also toggle on or off the playback of seven meso-level events. The other controls are set to enable or disable pitch modulation for each sample, change the rate of modulation and change, or freeze, the calculation of probability distributions for any stochastic models.

   The second channel uses an instrument built specifically for the performance, the Firefader,[fn:70] an open source haptic interface developed by Edgar Berdhal. The instrument is comprised of two motorised faders with capacitive sensing to ascertain when a user touches one of the faders. The interface uses a haptic feedback loop with physical models built in the musical programming language of the users choice. After registering that the performer is touching the interface, the network activity messages received are translated to weight forces on spring models. The Max/MSP patch that handles the messages and synthesis has been constructed using the Firefader's physical modelling libraries.[fn:71] At set points along the faders path of travel they trigger resonant bell models, whose sound is routed back to the Digital Audio Workstation to be mixed with the other sources. The forces on the springs will cause the faders to move and strike the bells of their own accord, however the force can also be struggled used by the performer, as the force of a strike is reflected in the output of the bells physical model. The experience of using this instrument is slightly uncanny and somewhat akin to struggling against a phantom hand.

 The third channel is a simple monophonic synthesiser over which a response is improvised. Any monophonic synthesiser with an adjustable glide and the ability to tune the keys is suitable, the performer is encouraged to use a tuning fit for the mood of the performance. The instrument can be played with any keyboard controller available, although I have a preference for one that allows per-note pitch bending, for example the Keith McMillan QuNexus.[fn:72] One hand is expected to be controlling the fireFader and Cosmosƒ controls so the expectation is that this instrument should be simple to play single-handedly.

 The performance will begin by allowing the sequencer of Cosmosƒ to run while experimenting with controls until a suitable long term state is reached. This should be a setting that offers an interesting combination of sound development is combined with a fair amount of repetition. The haptic interface's audio is to be left muted during this time, with it's only sound to be the movement of its faders and motors if the performer elects to touch one of its faders to activate its movement. At any point the player is able to improvise on the keyboard, although it is most likely at periods requiring less control over the sequencer. At a certain point the performer is expected to unmute the volume for the haptic interface's bells, lower the volume of the sequencer, and to experiment with the combination of the three elements. Once feeling comfortable with the structure of the machinic behaviour, for a period the performer is expected to play a unaccompanied improvisation on the keyboard. After this the audio volume of the haptic interface is again lifted and the performance shifts into a struggle between playing the bells and playing short abrupt passages from the solo improvisation. Lastly the sound of the sequencer returns and the performer is expected to remove elements and eventually lower speeds and frequencies before fading out the sequencer.

* Conclusion

  This project has led me to see software as part of our subjectivity, rather than a tool, yet there is a danger software methods will narrow our perception rather than enlarge them. The process by which I developed this project was not from a carefully chosen theme, but rather a methodology where I have sought to describe some of the 'back boxes' of communication that I interact with on a daily basis. 'Hacking' the experience and aesthetics of the database into the interfaces for my performances and installations has been a core goal of the project. Incorporating the ideologies of streaming and hyper-media into our interfaces when designing interfaces for the distributed collaboration is a useful bottom-up, pathway to making a work that communicates the values of its database.

 The line in communication between message, noise and meta-information is often fluid and blurred, networked social systems shift communication into an atemporal, spatially distributed form, leading to changes in social patterns of behaviour. My series of explorations has shown that these kinds of engagement and appreciations do not reside solely in an online world. Digtial aesthetic and sensory attitudes are just as much part of the 'real' and computational approaches to sociality are able to be analysed and repeated in scenarios away from direct engagement with a computer. The experience and aesthetic of distributed networks can can be involved in many states of being and the distinction between online and offline is unhelpful.[fn:73] Meta-information, noise, and resistance are concepts implicit in all social communications and social engagements where there is tension over what falls into these categories for which actors has always been present.[fn:74]

I note that despite many technological changes, there is a surprising paucity of shared, collaborative tools in hybrid situations of interface access, such as to allow both in multi user and remote interaction with the same information. I encourage the development in exploring areas such as distributed interfacing with music and multi-user interfaces as something I would like to see wider proliferation of. This notion would perhaps see a return to the notion of the shared computing resource with multiple methods of access. I see there being possibility for this in architectures like the shared networked sound systems of Supercollider sound engines,[fn:75] that can be accessed using any interface method, in person or across networks. The internet is already one such database of multiple access however even there the selection of interfacing is limited, and can be threatened by the whims of service providers. I welcome developments such as the Web Audio API as methods to remedy this and offer alternative sensory methods of access a cyber-space.

 Designing interfaces that re-imagine the role of computerised sensation and experience, further towards augmentation and away form virtual models of reality is another important part of my approach. In studying the experience and aesthetics of social computing, I have found that the tools we use are often more interested in ensuring their continued use of them and adherence to their models of access to the world, rather than becoming part of a multiplicity of interface options. Software can become a trap that enslaves us in our desire to master it. Technology is more a medium than an instrument, and instrumental thinking will trap us in a will that strives to dominate and master anything that is other.[fn:76]  We cannot avoid or opt out of this issue within the periphery of the epoch of modern technology, “the only thing we have left is purely technological relationships.”[fn:77]

 My work has shown that we should be more critical about the social manipulations of everyday life, who is now committing these changes, the methods generally have not changed, however there is a state of flux in the actors. I have found that there is tension in the role assumed of users, whether they can gather information from the network to use in other scenarios or must fully reside within it to make use of its riches. I see this as the tension between virtual worlds and augmented worlds. Furthermore in the social realms, it can often be alienating to have a shared database, but not a common sense of interface. I have tried to illustrate these tensions in works that have accurate interfaces, and provoke common access to the sensations of the database.

 I have tried to create a series of works based on the digital ephemera. The value of information, and the hierarchies and roles that make its value fluid and subjective, are one of the truest expressions of sociality, and it is the sociality that is by and large being used against us. Following Galloway I think that the best way to empower users is to offer them multiple ways of considering themselves, rather than multiple kinds of objects. The end goal is the hope that users will envisage the ways in which existing social engagements can be 're-tooled'. My interfaces are not highly technical, or novel, instead it is a re-visioning of how to use what we already have.

 I think is that as the ideology, aesthetics and practices of code should be more deeply considered, then reflected in the interfaces that we design. By neglecting to create interfaces that offer interpretations of the underlying substrate, we do a great disservice to our ability to develop honest abstractions and engage users. I find this the root cause of black boxing, and an excellent site for radical design, reinvention and contention over meaning and purpose. Radically re-purposing a database is an excellent way to challenge preconceived notions of what a database material is for. Better considering the material itself offers access and possibilities for expansion, rather than obfuscating technicity which can sometimes be the result of calls for transparency. I have found that distributed collaboration has a strong affect on the kinds of interface we have to design. The idea of acess and location of sound, and the kinds of sounds that we make.

* Footnotes

[fn:1] Clay Shirky /The radical change was de-coupling groups in space and time. To get a conversation going around a conference table or campfire, you need to gather everyone in the same place at the same moment. By undoing those restrictions, the internet has ushered in a host of new social patterns, from the mailing list to the chat room to the weblog. http://shirky.com/writings/group_politics.html

[fn:2] Gregory Chaitin, a noted computer scientist, propounds a view that comprehension is a kind of data compression.

[fn:3] Lev Manovich, ‘Database as Symbolic Form’ <http://www.egs.edu/faculty/lev-manovich/articles/database-as-symbolic-form/> [accessed 15 February 2015].

[fn:4] Manovich.

[fn:5] Martin Heidegger, /The Question Concerning Technology/, and Other Essays, Harper Colophon Books ; CN 419 (New York: Harper & Row, 1977).

[fn:6] See: Trevor S. Jennings, /Bellfounding/ (Shire, 1988), p. 4. and ‘Bells and Bell-Founding’, /The Illustrated Magazine of Art/, 3 (1854), 167–76.

[fn:7] Jonathan Harvey, /Mortuos Plango, Vivos Voco/, 30 November 1980.

[fn:8] Steve Mann, Jason Nolan and Barry Wellman, ‘Sousveillance: Inventing and Using Wearable Computing Devices for Data Collection in Surveillance Environments’, /Surveillance & Society/, Foucault and Panopticism Revisited, 1 (2003), 331–55.

[fn:9] Alexander R. Galloway, Laruelle: Against the Digital (Minneapolis: Univ Of Minnesota Press, 2014).

[fn:10] Bret Victor, ‘Magic Ink: Information Software and the Graphical Interface’, 2006 <http://worrydream.com/MagicInk/#manipulation_software_design_is_hard> [accessed 17 February 2015].

[fn:11] Schuler.

[fn:12] ‘David M. Berry: Computationality and the New Aesthetic - Imperica - Arts, Technology, and Media Magazine’ <https://www.imperica.com/en/viewpoint/david-m-berry-computationality-and-the-new-aesthetic> [accessed 16 February 2015].

[fn:13] Heidegger.

[fn:14] David I. Waddington, ‘A Field Guide to Heidegger: Understanding “The Question Concerning Technology”’, Educational Philosophy and Theory, 37 (2005), 567–83 (p. 577) <http://dx.doi.org/10.1111/j.1469-5812.2005.00141.x>.

[fn:15] Waddington, p. 568.

[fn:16] Waddington p. 577.

[fn:17] François Dagognet, Faces, surfaces, interfaces (Vrin, 1982), p. 49.

[fn:18] Janet Abbate, Inventing the Internet (The MIT Press, 2000), p. 1.

[fn:19] David M. Berry, Critical Theory and the Digital, Critical Theory and Contemporary Society. (New York: Bloomsbury Academic, 2014), p. 10

[fn:20] T. H. Nelson, ‘Complex Information Processing: A File Structure for the Complex, the Changing and the Indeterminate’, in Proceedings of the 1965 20th National Conference, ACM ’65 (New York, NY, USA: ACM, 1965), pp. 84–100 <http://dx.doi.org/10.1145/800197.806036>.

[fn:21] Paul Adenot, Mozilla Foundation, Chris Wilson, Google and Chris Rogers, Google (until August 2013), ‘Web Audio API’, Web Audio API W3C Working Draft 10 October 2013 <http://www.w3.org/TR/webaudio/> [accessed 16 February 2015].

[fn:22] V. Cerf and R.E. Kahn, ‘A Protocol for Packet Network Intercommunication’, IEEE Transactions on Communications, 22 (1974), 637–48 <http://dx.doi.org/10.1109/TCOM.1974.1092259>.

[fn:23] Yukihiro Matsumoto, ‘Matz/streem’, GitHub <https://github.com/matz/streem> [accessed 16 February 2015].

[fn:24] see: Steven Horst, ‘The Computational Theory of Mind’, in The Stanford Encyclopedia of Philosophy, ed. by Edward N. Zalta, Spring 2011, 2011 <http://plato.stanford.edu/archives/spr2011/entries/computational-mind/> [accessed 16 February 2015]

[fn:25] see: ‘Agile Household Management | Agile Advice’ <http://www.agileadvice.com/2005/04/12/agile-case-studies/agile-household-management/> [accessed 16 February 2015].

[fn:26] Eden Medina, Cybernetic Revolutionaries: Technology and Politics in Allende’s Chile (Cambridge, Mass: MIT Press, 2011), p. 88.

[fn:27] Medina, p. 207.

[fn:28] ‘ExPHAT/twitter-Sort’, GitHub <https://github.com/ExPHAT/twitter-sort> [accessed 16 February 2015].

[fn:29] Michael S. Bernstein and others, ‘Soylent: A Word Processor with a Crowd Inside’, in Proceedings of the 23Nd Annual ACM Symposium on User Interface Software and Technology, UIST ’10 (New York, NY, USA: ACM, 2010), pp. 313–22 <http://dx.doi.org/10.1145/1866029.1866078>.

[fn:30] ‘Amazon Mechanical Turk - Welcome’ <https://www.mturk.com/mturk/welcome> [accessed 16 February 2015].

[fn:31] ‘THE CALIFORNIAN IDEOLOGY by Richard Barbrook and Andy Cameron | Imaginary Futures’ <http://www.imaginaryfutures.net/2007/04/17/the-californian-ideology-2/> [accessed 16 February 2015].

[fn:32] ‘Hackers Can’t Solve Surveillance’, @dmytri <http://www.dmytri.info/hackers-cant-solve-surveillance/> [accessed 16 February 2015].

[fn:33] ‘Rockford Lhotka - On the Use and Misuse of Patterns’ <http://www.lhotka.net/weblog/OnTheUseAndMisuseOfPatterns.aspx> [accessed 16 February 2015]., see also: Christopher Alexander, Sara Ishikawa and Murray Silverstein, A Pattern Language: Towns, Buildings, Construction (New York: Oxford University Press, 1977).

[fn:34] David Berry, ‘Stunlaw: Abduction Aesthetic: Computationality and the New Aesthetic’ <http://stunlaw.blogspot.co.nz/2012/04/abduction-aesthetic-computationality.html> [accessed 16 February 2015].

[fn:35] David Berry.

[fn:36] Hito Steyerl, Is the Museum a Battlefield, 2013 <https://vimeo.com/76011774> [accessed 16 February 2015].

[fn:37] Atocha Aliseda, ‘A Unified Framework for Abductive and Inductive Reasoning in Philosophy and AI’, in In ECAI’96 Workshop on Abductive and Inductive Reasoning, 1996, pp. 1–6.

[fn:38] David Berry, ‘Stunlaw: Computational Thinking: Some Thoughts about Abduction’ <http://stunlaw.blogspot.co.nz/2012/03/computational-thinking-some-thoughts.html> [accessed 16 February 2015].

[fn:39] ‘Vocaloid’, VocaloidTM <http://www.vocaloid.com/en/> [accessed 16 February 2015].

[fn:40] John Cage, Imaginary Landscape No. 5. For Any 42 Phonograph Records, Etc. <Score.> (Henmar Press, 1975).

[fn:41] ‘DARK SOULS | ダークソウル’ <http://darksouls.fromsoftware.jp/contents/> [accessed 16 February 2015].

[fn:42] ‘WSB: The Cut-up Technique’, 2000 <http://web.archive.org/web/20001017172144/http://www.bigtable.com/primer/0013b.html> [accessed 16 February 2015].

[fn:43] Penny Marshall, Big, 1988.

[fn:44] Richard Donner, Lethal Weapon 2, 1989.

[fn:45] ‘Beagleboard:BeagleBoneBlack - eLinux.org’ <http://elinux.org/Beagleboard:BeagleBoneBlack> [accessed 16 February 2015]

[fn:46] I. Fette and A. Melnikov, ‘The WebSocket Protocol’, 2011 <http://www.rfc-editor.org/info/rfc6455> [accessed 16 February 2015].

[fn:47] Paul Adenot, Chris Wilson.

[fn:48] dam Bergkvist, Ericsson, Daniel C. Burnett, Voxeo and Cullen Jennings, ‘WebRTC 1.0: Real-Time Communication Between Browsers’ <http://www.w3.org/TR/2015/WD-webrtc-20150210/> [accessed 16 February 2015].

[fn:49] ‘Node.js v0.12.0 Manual & Documentation’ <http://nodejs.org/api/> [accessed 16 February 2015].

[fn:50] Trevor Wishart, ‘Computer Sound Transformation’, 2000 <http://www.composersdesktop.com/trnsform.html> [accessed 16 February 2015].

[fn:51] Wishart.

[fn:52] Rick Waldron, ‘Rwaldron/johnny-Five’, GitHub <https://github.com/rwaldron/johnny-five> [accessed 16 February 2015].

[fn:53] ‘Beagleboard:BeagleBoneBlack - eLinux.org’.

[fn:54] ‘Express - Api Reference’ <http://expressjs.com/4x/api.html> [accessed 16 February 2015].

[fn:55] Paul Adenot and Chris Wilson.

[fn:56] Manovich.

[fn:57] Manovich.

[fn:58] Manuel De Landa, War in the Age of Intelligent Machines, Swerve eds. (New York: Zone Books, 1991), pp229-231.

[fn:59] ‘Kinect for Windows’ <http://www.microsoft.com/en-us/kinectforwindows/> [accessed 16 February 2015].

[fn:60] Oliver Kreylos, ‘KeckCAVES/SARndbox’, GitHub <https://github.com/KeckCAVES/SARndbox> [accessed 16 February 2015].

[fn:61] ‘What Is IanniX? | IanniX’ <http://www.iannix.org/en/whatisiannix/> [accessed 16 February 2015].

[fn:62] Sam Aaron, ‘Overtone/overtone’, GitHub <https://github.com/overtone/overtone> [accessed 16 February 2015

[fn:63] ‘SuperCollider » About’ <http://supercollider.sourceforge.net/> [accessed 16 February 2015].

[fn:64] Nick Collins, ‘Implementing Stochastic Synthesis for SuperCollider and iPhone’, in Proceedings of the Xenakis International Symposium (presented at the Xenakis International Symposium, Southbank Centre, London, 2011).

[fn:65] ‘What Is IanniX? | IanniX’.

[fn:66] Collins.

[fn:67] Sinan Bokesoy, ‘The Cosmos Model, an Event Generation System for Synthesizing Sonic Structures’, in Procedings of  International Computer Music Conference (presented at the International Computer Music Conference, Barcelona, Spain, 2005), pp. 259–62 <http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.380.1346>.

[fn:68] Iannis Xenakis, Formalized Music: Thought and Mathematics in Composition, Harmonologia Series, Rev. ed. (Stuyvesant, NY: Pendragon Press, 1992).

[fn:69] ‘Faderfox FX3’ <http://www.faderfox.de/fx3.html> [accessed 17 February 2015].

[fn:70] Edgar J. Berdahl, ‘FireFader: A Single Degree-of-Freedom Force-Feedback Device for Multimodal Interaction with Physical Models.’, The Journal of the Acoustical Society of America, 130 (2011), 2508 <http://dx.doi.org/10.1121/1.3654992>.

[fn:71] Berdahl.

[fn:72] ‘QuNexus USB MIDI CV Mini Keyboard Controller for Synthesizer’, Keith McMillen Instruments <http://www.keithmcmillen.com/products/qunexus/> [accessed 17 February 2015].

[fn:73] Angela VandenBroek, ‘[Online or Offline?] Part II: Do You Have to Be Using the Internet to Be Online? | How to Be an Anthropologist’, How to be an Anthropologist, 2013 <http://ak.vbroek.org/2013/04/06/online-or-offline-part-ii-do-you-have-to-be-using-the-internet-to-be-online/> [accessed 17 February 2015].

[fn:74] Michel Serres and Lawrence R. Schehr, The Parasite, Posthumanities (Minneapolis: University of Minnesota Press, 2007), i, pp. 51-52.

[fn:75] SuperOCllider OSC Model
Programming Music with Overtone - Sam Aaron, 2013 <http://youtu.be/imoWGsipe4k?t=15m5s> [accessed 17 February 2015].

[fn:76] David M. Berry, p. 11.

[fn:77] Heidegger: The Man and the Thinker, ed. by Thomas Sheehan (New Brunswick, N.J: Transaction Publishers, 2009), pp. 45–67.

[fn:78] Fix: Berry

[fn:79] Fix: Variant of Concept first recorded in Abraham Kaplan (1964). The Conduct of Inquiry: Methodology for Behavioral Science. San Francisco: Chandler Publishing Co. p. 28.

[fn:80] Fix: An Aesthesia of Networks, Anna Munster

[fn:81] Fix: NetFlix
